{"_id":"0usINzXxrd5UbBZU","name":"Set Elevation","type":"script","author":"7qbBJORkk2z0FBTX","img":"icons/svg/mountain.svg","scope":"global","command":"let applyChanges = false;\n\nif(args && args.length>0){\nconsole.log(args);\n  let enterval=parseFloat(args[0]);\n  let exitval= args.length>1?parseFloat(args[1]):null;\n  let elevation=0;\n  if(event && event === MLT.ENTER)\n    elevation = enterval;\n  else if(event ** event === MLT.LEAVE)\n    elevation = exitval;\n    token.update({\n        \"elevation\": elevation\n    });\n}\nelse\n{\n    new Dialog({\n    title: `Token Elevation Changer`,\n    content: `\n      <form>\n        <div class=\"form-group\">\n          <label>Elevation Value:</label>\n          <input id=\"token-elevation\" name=\"token-elevation\" type=\"number\" step=\"1\" value=\"0\"/>\n        </div>\n      </form>\n      `,\n    buttons: {\n      yes: {\n        icon: \"<i class='fas fa-check'></i>\",\n        label: `Apply Changes`,\n        callback: () => applyChanges = true\n      },\n      no: {\n        icon: \"<i class='fas fa-times'></i>\",\n        label: `Cancel Changes`\n      },\n    },\n    default: \"yes\",\n    close: html => {\n      if (applyChanges) {\n        for ( let token of canvas.tokens.controlled ) {\n        let elevation = html.find('[name=\"token-elevation\"]')[0].value || \"0\";\n        token.update({\n            \"elevation\": parseFloat(elevation)\n        });\n        //token.data.elevation=parseInt(elevation);\n\n        }\n      }\n    }\n  }).render(true);\n}","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"core":{"sourceId":"Macro.CpL3YgGgMfvubvuq"},"cf":{"id":"temp_ytj265j2gfr","path":"Automação","color":"#000000"}}}
{"name":"DAEAttack","type":"script","author":"7qbBJORkk2z0FBTX","img":"icons/skills/melee/strike-sword-steel-yellow.webp","scope":"global","command":"// DAEAttack itemName\n\n//console.log(\"ON ATACK\", args);\nif(!args) return;\nconst lastArg = args[args.length-1];\nlet ttoken = DAE.DAEfromUuid(lastArg.tokenUuid);\nlet tactor = ttoken.actor;\nlet ownItem = DAE.DAEfromUuid(lastArg.origin);\nlet aactor = ownItem.actor;\nlet item = aactor.items.find(i => i.name === args[1]);\n\nasync function CheckAttack(){\n    let aef = tactor.getEmbeddedCollection(\"ActiveEffect\").find(a => a.data.label == \"Unconscious\" || a.data.label == \"Dead\");\n    if(aef) return;\n    let DAEConditions = game.macros.getName(\"DAEConditions\");\n    let aCondition = item.data.data.activation.condition;\n    let conditions = (aCondition) ? aCondition.split(';'):false;\n    let rm = (await DAEConditions.execute(conditions, tactor));\n    if((aactor.uuid === lastArg.actorUuid) || (conditions != false && rm != conditions.length)) return;\n    return true;\n}\n\n\nif(args[0] === \"on\" || \"each\"){\n    let attpempt = (await CheckAttack(tactor, item));\n    if(!attpempt || !item) return;\n    //console.log(\"ITEM\", item);\n    item.roll();\n}\n\n/*\nlet DAEConditions = game.macros.getName(\"DAEConditions\");\nconsole.log(\"ARGS\",args);\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nif (args.length > 3) tactor = canvas.tokens.get(args[2]).actor;\n\nlet org = (lastArg.origin != undefined)?lastArg.origin.split('.'):args[1];\nlet atoken = (args.length > 3) ? canvas.tokens.get(args[1]) : _token;\n\nlet item;\n\nlet origitem = lastArg.efData.flags.dae.itemData;\nif(args.length < 3) item = atoken.actor.items.find(i => i.id === origitem._id);\nif(args.length == 3) item = (typeof args[1] === 'string') ? atoken.actor.items.find(i => i.name === args[1]) : atoken.actor.items.find(i => i.id === args[1]._id);\nif(args.length > 3) item = (typeof args[3] === 'string') ? atoken.actor.items.find(i => i.name === args[3]) : atoken.actor.items.find(i => i.id === args[3]._id);\n\n\nconsole.log(\"DAMAGE\",item, origitem);\nlet aCondition = (origitem)?origitem.data.activation.condition: item.data.data.activation.condition;\nlet conditions = (aCondition) ? aCondition.split(';'):false;\nconsole.log(\"Conditions\",conditions, aCondition);\n\nlet rm = await DAEConditions.execute(conditions, tactor);\nif(args[0] == \"on\"){\n    if((conditions && rm == conditions.length) || conditions == false){\n        item.roll();\n    }\n}else if(args[0] == \"each\"){\n    if((conditions && rm == conditions.length) || conditions == false){\n        item.roll();\n    }else{\n        await atoken.actor.deleteEmbeddedEntity(\"ActiveEffect\", lastArg.effectId);\n    }\n}\n*/","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_su2fbzyh8r","path":"DAE","color":"#800000"},"core":{"sourceId":"Compendium.innocenti-worlds.macros-houserules.hpkqSIiiNHkFWYpO"}},"_id":"4EajVmBeykAvlCMH"}
{"_id":"5DLNQnqE5Krx5DBU","name":"#[CF_tempEntity]","type":"chat","author":"7qbBJORkk2z0FBTX","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"cf":{"id":"temp_3rrfyxwmoc3","path":"Player Macros","color":"#e4950c","name":"Player Macros","children":["YA5VKin92WkPPgec","BZYwgumMvcGa74sP","T0gscD7eZ4tL1EKe","rPvuSeJV9GD4f0o7"],"folderPath":[]}}}
{"name":"UpdateTempHP","type":"script","author":"7qbBJORkk2z0FBTX","img":"icons/svg/heal.svg","scope":"global","command":"let target = canvas.tokens.get(args[1]);\nif (!target) {\n  ChatMessage.create({content: `Token ${args[1]} is no longer in scene`, whisper: ChatMessage.getWhisperIDs(\"GM\")})\n  return;\n}\nlet increment = args[2];\nlet temphpMax = (target.actor.data.data.attributes.hp.tempmax < increment)? increment:target.actor.data.data.attributes.hp.tempmax;\nlet temphp = (target.actor.data.data.attributes.hp.tempmax < increment)? increment:target.actor.data.data.attributes.hp.temp;\n\nif (args[0] === \"on\") {\n  target.actor.update({\"data.attributes.hp.tempmax\": temphpMax, \"data.attributes.hp.temp\": temphp})\nChatMessage.create({content: `Meal: ${target.name} received ${increment} HP temp`})\n} else {\n  target.actor.update({\"data.attributes.hp.tempmax\": 0, \"data.attributes.hp.temp\": 0})\nChatMessage.create({content: `Meal Expiry: ${target.name} Temp HP reduced by 0`})\n}","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true},"cf":{"id":"temp_1z2ppbh1u8p","path":"Automação Master","color":"#0080ff"},"core":{"sourceId":"Compendium.innocenti-actions.automation-macros.scYvZN9M9svLXQpQ"}},"_id":"5bl99S0mf8q6keOO"}
{"_id":"6jG3KWJBGFYrRyl1","name":"CUB-Conditions","type":"script","author":"7qbBJORkk2z0FBTX","img":"icons/svg/dice-target.svg","scope":"global","command":"let mapsetting = game.settings.get('combat-utility-belt', \"activeConditionMap\");\n\nmapsetting.forEach(element =>\n    {\n    element.activeEffect = game.items.getName(`CUB-${element.name}`)?.data.effects.contents[0];\n    }\n )\n\ngame.settings.set('combat-utility-belt', \"activeConditionMap\", mapsetting);","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"cf":{"id":"temp_ytj265j2gfr","path":"Automação","color":"#000000"}}}
{"_id":"7CXd9RpGVm5KqB0l","name":"Encounter","type":"script","author":"7qbBJORkk2z0FBTX","img":"icons/environment/wilderness/mine-interior-dungeon-door.webp","scope":"global","command":"let encounter = new InnocentiWorld.Encounters();\nlet tableName = `Encounter ${game.scenes.active.name}`\nawait encounter.RollTable(tableName)","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.YnoukCtSVrv8t8XZ"},"cf":{"id":"temp_ytj265j2gfr","path":"Automação","color":"#000000"}}}
{"name":"Actions","type":"script","author":"7qbBJORkk2z0FBTX","img":"icons/svg/dice-target.svg","scope":"global","command":"//game.macros.entities.find(i => i.name === 'GMActions').execute(game.user.id,token.id,...args);\nconsole.log(\"AAAAA\", args)\n\nlet checks = new Innocenti.Actions(game.user,token);\nchecks.Check(...args);","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_1z2ppbh1u8p","path":"Automação Master","color":"#0080ff"},"core":{"sourceId":"Compendium.innocenti-actions.automation-macros.phR02tAbyeMZDESJ"}},"_id":"7qNAt7Vx40y63bd3"}
{"name":"Create Tables By Rarity","type":"script","author":"7qbBJORkk2z0FBTX","img":"icons/svg/dice-target.svg","scope":"global","command":"game.betterTables.createTableFromCompendium(\"Full Table Foods\",\n    \"dnd5e.items\",\n    //\"innocenti-worlds.item-foods\",\n    //\"dnd5e.spells\",\n    { weightPredicate: predicate }\n);\n\nfunction predicate(entity) {\n    //if(entity.type != \"loot\") return 0;\n    //if(entity.data.data.level != 9) return 0;\n    //if(entity.data.data.consumableType != \"food\") return 0;\n    //if(entity.data.data.rarity != \"Legendary\") return 0;\n    //if(entity.data.data.price != 1000) return 0;\n    //if(entity.data.data.source != \"Vegetable\") return 0;\n\nconsole.log(\"Name\", entity.name)\n    switch (entity.data.data.rarity) {\n        case \"Common\":\n            return 16;\n        case \"Uncommon\":\n            return 8;\n        case \"Rare\":\n            return 4;\n        case \"Very rare\":\n            return 2;\n        case \"Legendary\":\n            return 1;\n        default:\n            return 0;\n    }\n\n}","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"Create Tables By Rarity ","colour":"#ff0000","trigger":""}},"cf":{"id":"temp_1obgq4p2j0q","path":"Generators","color":"#000000"},"core":{"sourceId":"Compendium.innocenti-actions.automation-macros.5c6EJu8botD8BsOp"}},"_id":"8SuCNj9QC9hGayVa"}
{"_id":"9RmkB9ho3xMdKx3o","name":"ReduceTokenSize","type":"script","author":"7qbBJORkk2z0FBTX","img":"icons/svg/degen.svg","scope":"global","command":"canvas.tokens.controlled.forEach(x=>{\n    x.update({ \"width\": 0.5, \"height\": 0.5 })\n});","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":true},"cf":{"id":"temp_ytj265j2gfr","path":"Automação","color":"#000000"}}}
{"_id":"BZYwgumMvcGa74sP","name":"Looting","type":"script","author":"7qbBJORkk2z0FBTX","img":"icons/containers/chest/chest-elm-steel-brown.webp","scope":"global","command":"let action = new InnocentiLoot.Loot();\nawait action.Check();","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"core":{"sourceId":"Macro.4EF55MrKqHBYzI0m"},"combat-utility-belt":{"macroTrigger":""},"cf":{"id":"temp_3rrfyxwmoc3","path":"Player Macros","color":"#e4950c"}}}
{"name":"RollTable: Complications","type":"script","author":"7qbBJORkk2z0FBTX","img":"icons/magic/death/undead-skeleton-deformed-red.webp","scope":"global","command":"game.tables.getName(\"Complications\").draw();","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"macro-marker":{"activeData":{"icon":"icons/svg/d20-grey.svg","tooltip":"RollTable: Complications","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_xfdoz5ftmj","path":"Roll Tables","color":"#008000"},"core":{"sourceId":"Compendium.innocenti-worlds.macros-houserules.HEbMljxKEOZBEgYp"}},"_id":"BhqHaKMvslpAL7L1"}
{"name":"RollTable: Orientation","type":"script","author":"7qbBJORkk2z0FBTX","img":"icons/tools/navigation/compass-brass-blue-red.webp","scope":"global","command":"game.tables.getName(\"Orientation\").draw();","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"macro-marker":{"activeData":{"icon":"icons/svg/d20-grey.svg","tooltip":"RollTable: Orientation","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_xfdoz5ftmj","path":"Roll Tables","color":"#008000"},"core":{"sourceId":"Compendium.innocenti-worlds.macros-houserules.1rqDqtjNNPzhH73i"}},"_id":"FEa4l1WReAZAUbPf"}
{"name":"RollTable: Complications Research","type":"script","author":"7qbBJORkk2z0FBTX","img":"icons/sundries/books/book-embossed-gold-red.webp","scope":"global","command":"game.tables.getName(\"Complications Research\").draw();","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"macro-marker":{"activeData":{"icon":"icons/svg/d20-grey.svg","tooltip":"RollTable: Research Complications","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_xfdoz5ftmj","path":"Roll Tables","color":"#008000"},"core":{"sourceId":"Compendium.innocenti-worlds.macros-houserules.GCmalnLgLekr0TXS"}},"_id":"FcGajGO8vzxC8cnJ"}
{"_id":"G4iliGOvAqXhtbIi","name":"#[CF_tempEntity]","type":"chat","author":"7qbBJORkk2z0FBTX","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"cf":{"id":"temp_ytj265j2gfr","path":"Automação","color":"#000000","name":"Automação","children":["6jG3KWJBGFYrRyl1","7CXd9RpGVm5KqB0l","HuhWwmdWzEP05mQp","9RmkB9ho3xMdKx3o","VxbeYfX3C9V7x7I8","0usINzXxrd5UbBZU","ZKDvu595QoETNUPa","ScCK2dsiciIPcXMx"],"folderPath":[]}}}
{"name":"DAEGrapple","type":"script","author":"7qbBJORkk2z0FBTX","img":"modules/combat-utility-belt/icons/grappled.svg","scope":"global","command":"// Grapple true DC\nconst lastArg = args[args.length-1];\nlet ttoken = DAE.DAEfromUuid(lastArg.tokenUuid);\nlet tactor = ttoken.actor;\n//let tactor = (lastArg.tokenId) ? ttoken.actor : game.actors.get(lastArg.actorId);\n\n//let org = lastArg.origin.split('.');\n//let aactor = (org[0]== \"Actor\")? game.actors.get(org[1]):canvas.tokens.get(org[3]).actor;\nlet skill = (tactor.data.data.skills.ath.total >= tactor.data.data.skills.acr.total) ? 'ath' : 'acr';\nlet item = DAE.DAEfromUuid(lastArg.origin);\nlet aactor = item.actor;\nlet DC = (args[2] != lastArg) ? args[2] : (args[1] != lastArg && item.data.data.save.dc)? parseInt(item.data.data.save.dc):false;\nconsole.log(\"DC\", DC, args, item);\n\nasync function CheckGrapple(tactor, item){\n    let aef = tactor.getEmbeddedCollection(\"ActiveEffect\").find(a => a.data.label == \"Unconscious\" || a.data.label == \"Dead\");\n    if(aef) return;\n    let sameName = tactor.getEmbeddedCollection(\"ActiveEffect\").filter(a => a.data.label == lastArg.efData.label);\n    if(sameName.length > 1) return;\n    let DAEConditions = game.macros.getName(\"DAEConditions\");\n    let aCondition = item.data.data.activation.condition;\n    let conditions = (aCondition) ? aCondition.split(';'):false;\n    let rm = (await DAEConditions.execute(conditions, tactor));\n    //precisa retornar só o que leva ao greaple\n    if((aactor.uuid === lastArg.actorUuid) || (conditions != false && rm != conditions.length)) return;\n    console.log(\"Conditions\", conditions, rm);\n    return true;\n}\n\nasync function Grapple(aactor, tactor, skill, dc, auto=false){\n    if(auto == true ) return;\n    let flavor = (typeof dc === 'number')?`${CONFIG.DND5E.abilities[skill]} Check vs DC: ${dc}`:\"\";\n    let grapple = (await tactor.rollSkill(skill, {flavor: flavor, fastforward: true}).then(async (result) => {\n        if(dc && result.total < dc ) return true;\n        let res = (await aactor.rollSkill('ath', {fastforward: true}));\n        if(result.total < res.total) return true;\n        }));\n    if(grapple) return;\n    await RemoveGrapple(tactor, lastArg.effectId);\n}\n\nasync function RemoveGrapple(tactor, effectid){\n    //let eff = tactor.getEmbeddedCollection(\"ActiveEffect\");\n    //let effact = eff.filter(a=>a.data.label == effectName);\n    await tactor.deleteEmbeddedDocuments(\"ActiveEffect\", [effectid]);\n}\n\nif (args[0] === \"on\") {\n    let attpempt = (await CheckGrapple(tactor, item));\n    if(!attpempt){ \n        await RemoveGrapple(tactor, lastArg.effectId);\n        return;\n    }\n    if(args[1] == \"auto\") return;\n    await Grapple(aactor, tactor, skill, DC, args[1])\n}\nif (args[0] === \"each\") {\n    let d = Dialog.confirm({\n        title: \"Grappler\",\n        content: \"<p>Você está agarado!</p><p>Deseja escapar do agarrão?</p>\",\n        yes: async() => {\n            let attpempt = await CheckGrapple(tactor, item);\n            if(!attpempt){ \n                await RemoveGrapple(tactor, lastArg.effectId);\n                return;\n            }\n            await Grapple(aactor, tactor, skill, DC, args[1])\n            \n        },\n        no: () => console.log(\"You chose ... poorly\"),\n        defaultYes: false\n    });\n}","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_su2fbzyh8r","path":"DAE","color":"#800000"},"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Compendium.innocenti-worlds.macros-houserules.octT6lsJNX0dCiKV"}},"_id":"GleU4MhKrB9p3iqY"}
{"_id":"HuhWwmdWzEP05mQp","name":"Give Money","type":"script","author":"7qbBJORkk2z0FBTX","img":"icons/commodities/currency/coins-plain-stack-gold.webp","scope":"global","command":"//Money Give/Remover\n\n(() => {\n\tlet targets = game.user.targets;\n\n\tlet targets_content = ``;\n\n\tfor (let target of targets) {\n\t\ttargets_content += `<img src=${target.data.img} width=\"50\" height=\"50\">`\n\t}\n\n\tlet dialog_content = `\n\t<div class = \"form-group\">\n\t\t<h1><img src=\"icons/commodities/currency/coins-plain-stack-gold.webp\" width=\"50px\" /> Golden Share</h1>\n\t\t<table style=\"width: 100%; text-align:center; border: 1px solid black\">\n\t\t  <tr>\n\t\t\t<thcolspan=\"2\">${targets_content}</th>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td><label for=\"pp\">Platnium<label></td>\n\t\t\t<td><input name=\"pp\" type =\"number\" value=\"0\" min=\"-999\" max=\"999\"></td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td><label for=\"gp\">Gold    <label></td>\n\t\t\t<td><input name=\"gp\" type =\"number\" value=\"0\" min=\"-999\" max=\"999\"></td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td><label for=\"ep\">Electrum<label></td>\n\t\t\t<td><input name=\"ep\" type =\"number\" value=\"0\" min=\"-999\" max=\"999\"></td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td><label for=\"sp\">Silver  <label></td>\n\t\t\t<td><input name=\"sp\" type =\"number\" value=\"0\" min=\"-999\" max=\"999\"></td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td><label for=\"cp\">Copper  <label></td>\n\t\t\t<td><input name=\"cp\" type =\"number\" value=\"0\" min=\"-999\" max=\"999\"></td>\n\t\t  </tr>\n\t\t</table>\n\t</div>`;\n\n\tnew Dialog({\n\t\tcontent: dialog_content,\n\t\tbuttons:\n\t\t{\n\t\t\tOk: { icon: ``, label: `Change Money.`, callback: (html) => changeMoney(targets, html) }\n\t\t}\n\t}).render(true);\n})();\n\nasync function changeMoney(targets, html) {\n\tlet difference_money = {\n\t\tpp: parseInt(html.find('[name=pp]')[0].value),\n\t\tgp: parseInt(html.find('[name=gp]')[0].value),\n\t\tep: parseInt(html.find('[name=ep]')[0].value),\n\t\tsp: parseInt(html.find('[name=sp]')[0].value),\n\t\tcp: parseInt(html.find('[name=cp]')[0].value)\n\t}\n\n\t//divide update_money based on # of targets\n\tdifference_money = divideValue(difference_money, targets.size);\n\n\t//get rid of \"extra\" stuff, display all names in header\n\tlet actor_content = ``;\n\tfor (let target of targets) { actor_content += `${target.actor.name}, `; }\n\n\tlet table_content = ``;\n\tfor (let key in difference_money) {\n\t\tif (difference_money[key] !== 0)\n\t\t\ttable_content += `<tr><td>${key} :</td><td>${difference_money[key]}</td></tr>`\n\t}\n\n\tlet content = `\n\t<h2><img src=\"icons/commodities/currency/coins-plain-stack-gold.webp\" width=\"50px\" /> Add Money</h2>\n\t<table style \"width: 100%; text-align:center; border: 1px solid black\">\n\t\t<tr>\n\t\t  <th colspan=\"2\">Money Change :</th>\n\t\t</tr>\n\t\t<tr>\n\t\t  <th colspan=\"2\">${actor_content}</th>\n\t\t</tr>\n\t\t${table_content}\n\t</table>`;\n\n\tfor (let target of targets) {\n\t\tlet original_money = duplicate(target.actor.data.data.currency);\n\t\tlet update_money = changeValue(original_money, difference_money);\n\n\t\tawait target.actor.update({ \"data.currency\": update_money });\n\t}\n\n\tChatMessage.create({ content, speaker: ChatMessage._getSpeakerFromUser({ user: game.user }) })\n}\n\nfunction changeValue(Original, Difference) {\n\tlet Update = { pp: 0, gp: 0, ep: 0, sp: 0, cp: 0 };\n\n\tfor (let key in Original) {\n\t\tUpdate[key] = Original[key] + Difference[key];\n\t\tif (Update[key] < 0) {\n\t\t\tswitch (key) {\n\t\t\t\tcase \"cp\":\n\t\t\t\t\tif (Update[\"sp\"] > 0) {\n\t\t\t\t\t\tUpdate[\"cp\"] += 10;\n\t\t\t\t\t\tUpdate[\"sp\"] -= 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (Update[\"ep\"] > 0) {\n\t\t\t\t\t\tUpdate[\"cp\"] += 50;\n\t\t\t\t\t\tUpdate[\"ep\"] -= 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (Update[\"gp\"] > 0) {\n\t\t\t\t\t\tUpdate[\"cp\"] += 100;\n\t\t\t\t\t\tUpdate[\"gp\"] -= 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (Update[\"pp\"] > 0) {\n\t\t\t\t\t\tUpdate[\"cp\"] += 1000;\n\t\t\t\t\t\tUpdate[\"pp\"] -= 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(`Not enough money to do that.`);\n\t\t\t\t\t}\n\t\t\t\t\tUpdate = changeValue(Update, { pp: 0, gp: 0, ep: 0, sp: 0, cp: 0 });\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"sp\":\n\t\t\t\t\tif (Update[\"ep\"] > 0) {\n\t\t\t\t\t\tUpdate[\"sp\"] += 5;\n\t\t\t\t\t\tUpdate[\"ep\"] -= 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (Update[\"gp\"] > 0) {\n\t\t\t\t\t\tUpdate[\"sp\"] += 10;\n\t\t\t\t\t\tUpdate[\"gp\"] -= 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (Update[\"pp\"] > 0) {\n\t\t\t\t\t\tUpdate[\"sp\"] += 100;\n\t\t\t\t\t\tUpdate[\"pp\"] -= 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (Update[\"cp\"] > 9) {\n\t\t\t\t\t\tUpdate[\"sp\"] += 1;\n\t\t\t\t\t\tUpdate[\"cp\"] -= 10;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(`Not enough money to do that.`);\n\t\t\t\t\t}\n\t\t\t\t\tUpdate = changeValue(Update, { pp: 0, gp: 0, ep: 0, sp: 0, cp: 0 });\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ep\":\n\t\t\t\t\tif (Update[\"gp\"] > 0) {\n\t\t\t\t\t\tUpdate[\"ep\"] += 2;\n\t\t\t\t\t\tUpdate[\"gp\"] -= 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (Update[\"pp\"] > 0) {\n\t\t\t\t\t\tUpdate[\"ep\"] += 20;\n\t\t\t\t\t\tUpdate[\"pp\"] -= 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (Update[\"sp\"] > 4) {\n\t\t\t\t\t\tUpdate[\"ep\"] += 1;\n\t\t\t\t\t\tUpdate[\"sp\"] -= 5;\n\t\t\t\t\t}\n\t\t\t\t\telse if (Update[\"cp\"] > 49) {\n\t\t\t\t\t\tUpdate[\"ep\"] += 1;\n\t\t\t\t\t\tUpdate[\"cp\"] -= 50;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(`Not enough money to do that.`);\n\t\t\t\t\t}\n\t\t\t\t\tUpdate = changeValue(Update, { pp: 0, gp: 0, ep: 0, sp: 0, cp: 0 });\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"gp\":\n\t\t\t\t\tif (Update[\"pp\"] > 0) {\n\t\t\t\t\t\tUpdate[\"gp\"] += 10;\n\t\t\t\t\t\tUpdate[\"pp\"] -= 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (Update[\"ep\"] > 1) {\n\t\t\t\t\t\tUpdate[\"gp\"] += 1;\n\t\t\t\t\t\tUpdate[\"ep\"] -= 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if (Update[\"sp\"] > 9) {\n\t\t\t\t\t\tUpdate[\"gp\"] += 1;\n\t\t\t\t\t\tUpdate[\"sp\"] -= 10;\n\t\t\t\t\t}\n\t\t\t\t\telse if (Update[\"cp\"] > 99) {\n\t\t\t\t\t\tUpdate[\"gp\"] += 1;\n\t\t\t\t\t\tUpdate[\"cp\"] -= 100;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(`Not enough money to do that.`);\n\t\t\t\t\t}\n\t\t\t\t\tUpdate = changeValue(Update, { pp: 0, gp: 0, ep: 0, sp: 0, cp: 0 });\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"pp\":\n\t\t\t\t\tif (Update[\"gp\"] > 9) {\n\t\t\t\t\t\tUpdate[\"pp\"] += 1;\n\t\t\t\t\t\tUpdate[\"gp\"] -= 10;\n\t\t\t\t\t}\n\t\t\t\t\telse if (Update[\"ep\"] > 19) {\n\t\t\t\t\t\tUpdate[\"pp\"] += 1;\n\t\t\t\t\t\tUpdate[\"ep\"] -= 20;\n\t\t\t\t\t}\n\t\t\t\t\telse if (Update[\"sp\"] > 99) {\n\t\t\t\t\t\tUpdate[\"pp\"] += 1;\n\t\t\t\t\t\tUpdate[\"sp\"] -= 100;\n\t\t\t\t\t}\n\t\t\t\t\telse if (Update[\"cp\"] > 999) {\n\t\t\t\t\t\tUpdate[\"pp\"] += 1;\n\t\t\t\t\t\tUpdate[\"cp\"] -= 1000;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(`Not enough money to do that.`);\n\t\t\t\t\t}\n\t\t\t\t\tUpdate = changeValue(Update, { pp: 0, gp: 0, ep: 0, sp: 0, cp: 0 });\n\t\t\t}\n\t\t}\n\t}\n\treturn Update;\n}\n\nfunction divideValue(Object, Value) {\n\tif (Value === 1) return Object;\n\tlet remainder = 0;\n\tlet Update = { pp: 0, gp: 0, ep: 0, sp: 0, cp: 0, remainder: 0 };\n\n\tfor (let key in Object) {\n\t\tUpdate[key] = Object[key] + remainder;\n\t\tremainder = Object[key] % Value;\n\t\tif (Update[key] > 0) Update[key] = Math.floor(Update[key] / Value);\n\t\tif (Update[key] < 0) Update[key] = Math.ceil(Update[key] / Value);\n\t\tif (remainder !== 0) {\n\t\t\tif (key === \"ep\") { remainder *= 5; }\n\t\t\telse if (key === \"gp\") { remainder *= 2; }\n\t\t\telse { remainder *= 10; }\n\t\t}\n\t}\n\tUpdate.remainder = remainder / 10;\n\treturn Update;\n}","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_ytj265j2gfr","path":"Automação","color":"#000000"},"core":{"sourceId":"Compendium.innocenti-actions.automation-macros.HI20CS5Fh4z0goab"}}}
{"name":"CheckItem","type":"script","author":"7qbBJORkk2z0FBTX","img":"icons/svg/dice-target.svg","scope":"global","command":"let checks = new Innocenti.CheckItem(game.user,token);\nchecks.Check(...args);","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_1z2ppbh1u8p","path":"Automação Master","color":"#0080ff"},"core":{"sourceId":"Compendium.innocenti-actions.automation-macros.phR02tAbyeMZDESJ"}},"_id":"IuvO6w3YtJmjUGcf"}
{"name":"PoolCheck","type":"script","author":"7qbBJORkk2z0FBTX","img":"icons/svg/dice-target.svg","scope":"global","command":"//console.log(args);\nlet pool = new Innocenti.PoolCheck(game.user,token);\npool.Check(...args);","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_1z2ppbh1u8p","path":"Automação Master","color":"#0080ff"},"core":{"sourceId":"Compendium.innocenti-actions.automation-macros.Ykra1KjpK4huzFoq"}},"_id":"JozN50QPQYV8A2i6"}
{"name":"RollTable: Segredos dos Personagens","type":"script","author":"7qbBJORkk2z0FBTX","img":"icons/sundries/books/book-red-exclamation.webp","scope":"global","command":"game.tables.getName(\"Segredos dos Personagens\").draw();","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_xfdoz5ftmj","path":"Roll Tables","color":"#008000"},"core":{"sourceId":"Compendium.innocenti-worlds.macros-houserules.O44VSFhNABFnWEKn"}},"_id":"L2xpqOpXYu6M2pQN"}
{"name":"Passive","type":"script","author":"7qbBJORkk2z0FBTX","img":"icons/svg/dice-target.svg","scope":"global","command":"if(args[0].args){\n    let checks = new Innocenti.PassiveCheck(args[0].user.id,args[0].token);\n    checks.Check(...args[0].args);\n}else{\n    //args[0] = dificult\n    //args[1] = sucess\n    //args[2] = fail\n    //args[3] = flags\n   console.log(token.id,game.user.id,args);\n    console.log(args);\n    let checks = new Innocenti.PassiveCheck(game.user,token);\n    checks.Check(...args); \n}","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":true},"cf":{"id":"temp_1z2ppbh1u8p","path":"Automação Master","color":"#0080ff"}},"_id":"Or6VL0dO08ZrSvU5"}
{"name":"DAEDamageInferno","type":"script","author":"7qbBJORkk2z0FBTX","img":"icons/svg/dice-target.svg","scope":"global","command":"// DAEDamage dice type\n\nconst lastArg = args[args.length-1];\nlet atype = args[2]\nlet adamage = args[1].split('d');\nlet ttoken = DAE.DAEfromUuid(lastArg.tokenUuid); // better since it gets the token no matter what scene it is on\nlet casterItem = DAE.DAEfromUuid(lastArg.origin); // better since it gets the item on the synthetic actor\nlet aactor = casterItem.actor;\nif (aactor.uuid === lastArg.actorUuid) return; // don't trigger on the troll\nconsole.log(ttoken, args, \"ORGS\");\nlet damageInferno = ttoken.getFlag('world', 'dmginf') ?? 0;\nadamage[0] = parseInt(adamage[0]) + damageInferno;\nlet newdice = adamage.join('d');\n\nif (args[0] === \"on\") {\n    ttoken.setFlag('world', 'dmginf', adamage[0]);\n}\nif (args[0] === \"each\" || \"on\") {\n    let damageRoll = new Roll(newdice,{async:false}).roll();\n    new MidiQOL.DamageOnlyWorkflow(aactor,null,damageRoll.total,atype,[ttoken], damageRoll,{itemCardId: \"new\", itemData:casterItem.data});\n}\nif(args[0] === \"off\"){\n    ttoken.unsetFlag('world', 'dmginf');\n}","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":true},"cf":{"id":"temp_su2fbzyh8r","path":"DAE","color":"#800000"}},"_id":"PUsvpFdnVxWfSBV7"}
{"name":"#[CF_tempEntity]","type":"chat","author":"7qbBJORkk2z0FBTX","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"cf":{"id":"temp_xfdoz5ftmj","path":"Roll Tables","color":"#008000","name":"Roll Tables","children":["BhqHaKMvslpAL7L1","FcGajGO8vzxC8cnJ","FEa4l1WReAZAUbPf","L2xpqOpXYu6M2pQN"],"folderPath":[]}},"_id":"QFkO1jSZxCZceGxU"}
{"_id":"ScCK2dsiciIPcXMx","name":"Update Unlinked Tokens to Actors","type":"script","author":"7qbBJORkk2z0FBTX","img":"icons/svg/dice-target.svg","scope":"global","command":"(async () => {\n    let aName = \"Bullywug\";\n    let tactor = game.actors.getName(aName);\n    let tokens = canvas.tokens.controlled;\n    for (var tok of canvas.tokens.controlled) {\n        tok.update({actorId: tactor._id})\n       console.log(tok)\n    }\n    \n})();","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_ytj265j2gfr","path":"Automação","color":"#000000"},"core":{"sourceId":"Compendium.innocenti-actions.automation-macros.egoPB0H7IIZFYlyA"}}}
{"_id":"T0gscD7eZ4tL1EKe","name":"Open Chest","type":"script","author":"7qbBJORkk2z0FBTX","img":"icons/containers/chest/chest-reinforced-box-brown.webp","scope":"global","command":"let actions = new InnocentiOpenLock.Actions('OpenLock');","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"core":{"sourceId":"Macro.UXJLvaOUS8ANMPkp"},"furnace":{"runAsGM":false},"cf":{"id":"temp_3rrfyxwmoc3","path":"Player Macros","color":"#e4950c"}}}
{"name":"Until Save","type":"script","author":"7qbBJORkk2z0FBTX","img":"icons/magic/time/arrows-circling-pink.webp","scope":"global","command":"// Two versions one that fetches damage/save/dc from item and one that use args like \n// macro.execute CUSTOM \"Until Save\" cha 15 \n// Get some useful info.\n// active conition (requer uma condição especifica apra o efeito funcionar)\n\nconst lastArg = args[args.length-1];\n\nconsole.log(\"Until Save args are \", ...args);\nlet ttoken = DAE.DAEfromUuid(lastArg.tokenUuid);\nlet tactor = ttoken.actor;\nlet item = DAE.DAEfromUuid(lastArg.origin);\nlet aactor = item.actor;\n\nasync function CheckSave(tactor, item){\n    let aef = tactor.getEmbeddedCollection(\"ActiveEffect\").find(a => a.data.label == \"Unconscious\" || a.data.label == \"Dead\");\n    if(aef) return;\n    let DAEConditions = game.macros.getName(\"DAEConditions\");\n    let aCondition = item.data.data.activation.condition;\n    let conditions = (aCondition) ? aCondition.split(';'):false;\n    let rm = (await DAEConditions.execute(conditions, tactor));\n    console.log(\"OThER\", conditions);\n    //if(aactor.uuid === lastArg.actorUuid) return;\n    if((aactor.uuid === lastArg.actorUuid) || (conditions != false && rm != conditions.length))return;\n    return true;\n}\nasync function UntilSave(tactor, item, saveType, DC, flavor){\n   let save = (await tactor.rollAbilitySave(saveType, {flavor, fastforward: true})).total;\n   if (save >= DC){\n       await RemoveCondition(tactor,lastArg.effectId);\n       return;\n   }\n   if(!item.data.formula) return;\n   let dd = item.data.formula.split('[');\n   let dtype =(dd.length > 1) ? dd[1].slice(0, -1):item.data.damage.parts[0][1];\n   let damageRoll = new Roll(dd[0], {async:false}).roll();\n   new MidiQOL.DamageOnlyWorkflow(actor, token, damageRoll.total, dtype, [token], damageRoll, {flavor: `Failed Save for ${item.name} - damage type ${dtype}`, item})\n}\nasync function RemoveCondition(tactor, effectId){\n    await tactor.deleteEmbeddedDocuments(\"ActiveEffect\", [effectId]);\n}\n\nif (args[0] === \"on\") {\n    let attpempt = await CheckSave(tactor, item);\n    if(attpempt)return;\n    await RemoveCondition(tactor, lastArg.efData.label);\n}\nif (args[0] === \"each\") {\n    let saveType = (args[1] && args[1] != lastArg)? args[1]: item.data.data.save.ability;\n    let DC = (args[2] && args[2] != lastArg)? args[2]: item.data.data.save.dc;\n    let flavor = `${CONFIG.DND5E.abilities[saveType]} DC${DC} ${item?.name || \"\"}`;\n    UntilSave(tactor, item, saveType, DC, flavor);\n}\n\nif (args[0] === \"off\") {\n// do any clean up\n}","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true},"cf":{"id":"temp_su2fbzyh8r","path":"DAE","color":"#800000"},"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Compendium.innocenti-worlds.macros-houserules.qozoBrs5Q7KT49Mm"}},"_id":"UszeMXETmSfr5Jp7"}
{"_id":"VxbeYfX3C9V7x7I8","name":"SeeID","type":"script","author":"7qbBJORkk2z0FBTX","img":"icons/svg/dice-target.svg","scope":"global","command":"//Display Name & IDs\nfor(let token of canvas.tokens.controlled)\n{\n    ChatMessage.create({\n        content : token.name + \" \" + token.id\n    });\n}\n\nfor(let wall of canvas.walls.controlled)\n{\n    ChatMessage.create({\n        content : wall.name + \" \" + wall.id\n    })\n}\n/*\nfor(let light of canvas.lighting.activate)\n{\n    ChatMessage.create({\n        content : light.name + \" \" + light.id\n    })\n}\nfor (let note of canvas.notes.placeables)\n{\n    ChatMessage.create({\n        content :  note.name + \" \" + note.id\n     });\n}\n*/\nfor (let draw of canvas.drawings.controlled)\n{\n   ChatMessage.create({\n      content :  draw.name + \" \" + draw.id\n   });\n}\n\nfor (let tile of canvas.activeLayer.controlled)\n{\n    ChatMessage.create({\n        content :  tile.name + \" \" + tile.id\n     });\n}","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_ytj265j2gfr","path":"Automação","color":"#000000"},"core":{"sourceId":"Compendium.innocenti-actions.automation-macros.MuNTG5b6wHoDpuUe"}}}
{"name":"DAEConditions","type":"script","author":"7qbBJORkk2z0FBTX","img":"icons/svg/aura.svg","scope":"global","command":"// args[0] = conditions\n//args[1] = tactor;\nlet rm = 0;\nlet verif;\nlet sTypes;\n    if(args[0] != false){\n        for (let c of args[0]){\n            let cond = c.split(':');\n            cond[0] = cond[0].trim();\n            switch (cond[0]) {\n                case 'Condition':\n                    if(game.cub.hasCondition(cond[1].trim(), args[1])) rm ++;\n                    break;\n                case 'Size':\n                    sTypes = cond[1].trim().split(',');\n                    if(sTypes.includes(args[1].data.data.traits.size)) rm++;\n                    break;\n                case 'Alignment':\n                    verif = args[1].data.data.details.alignment.trim().toLowerCase();\n                    if(verif.inclides(cond[1].trim().toLowerCase())) rm++;\n                    break;\n                case 'Type':\n                    verif = args[1].data.data.details.type.trim().toLowerCase();\n                    if(verif.inclides(cond[1].trim().toLowerCase())) rm++;\n                    break;\n                default:\n            }\n        }\n    }\n    return rm;","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true},"cf":{"id":"temp_su2fbzyh8r","path":"DAE","color":"#800000"},"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Compendium.innocenti-worlds.macros-houserules.8oJ4SPjhNWFb7Fn1"}},"_id":"XlWVeQF1N4CElhVS"}
{"_id":"YA5VKin92WkPPgec","name":"Find Trap","type":"script","author":"7qbBJORkk2z0FBTX","img":"icons/tools/scribal/magnifying-glass.webp","scope":"global","command":"let actions = new InnocentiOpenLock.Actions('FindLockTrap');","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"core":{"sourceId":"Macro.4MODdS79QhACoEd9"},"furnace":{"runAsGM":false},"cf":{"id":"temp_3rrfyxwmoc3","path":"Player Macros","color":"#e4950c"}}}
{"_id":"ZKDvu595QoETNUPa","name":"Set Patrol","type":"script","author":"7qbBJORkk2z0FBTX","img":"icons/svg/dice-target.svg","scope":"global","command":"await canvas.tokens.controlled.forEach(x=>{\n    canvas.tokens.documentCollection.map(y=>{\n        if(y.uuid == x.document.uuid){\n            let patrol = y.getFlag(\"patrol\",\"enablePatrol\") ?? false;\n            let spoot = y.getFlag(\"patrol\",\"enableSpotting\") ?? false;\n            y.setFlag(\"patrol\",\"enablePatrol\", !patrol);\n            y.setFlag(\"patrol\",\"enableSpotting\", !spoot);\n           //console.log(\"Name\", patrol); \n        }\n    });\n    ui.notifications.info(\"Todos patrulhando\");\n});","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"cf":{"id":"temp_ytj265j2gfr","path":"Automação","color":"#000000"}}}
{"name":"Slipy","type":"script","author":"7qbBJORkk2z0FBTX","img":"icons/svg/dice-target.svg","scope":"global","command":"let tactor = _token.actor;\nlet dificult = args[0]??10;\nlet actorTrap = game.actors.getName(\"Trap\");\nlet item = actorTrap.items.find(a => a.name === \"Slipy\");\nlet fitem = tactor.items.find(a => a.name === \"Grampos\" || a.name === \"Crampon\");\nif(!fitem){\n    tactor.rollSkill('acr').then((result) => {\n        if(result.total < dificult){\n            new MidiQOL.TrapWorkflow(actorTrap, item, [_token], _token.center);\n        }\n        \n    })\n}else{\n    ChatMessage.create({\n        user: ChatMessage.getWhisperRecipients(\"GM\")[0],\n        content: `${_token.name} - does not slip because he is using ${fitem.name}`,\n        speaker: ChatMessage.speaker,\n        //whisper: ChatMessage.getWhisperRecipients(\"GM\"),\n        blind: false\n    });\n}","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_1z2ppbh1u8p","path":"Automação Master","color":"#0080ff"},"core":{"sourceId":"Compendium.innocenti-actions.automation-macros.qNdIEHjfavQHebE3"}},"_id":"bJFiyTFwdbqsuIkg"}
{"name":"Update Loot-Consumable","type":"script","author":"7qbBJORkk2z0FBTX","img":"icons/svg/dice-target.svg","scope":"global","command":"(async ()=>{\n    let changeFolder = 'Custom Foods';\n    let items = await game.items;\n    await items.map(x=>{\n        if(x.folder?.name == changeFolder ){\n          console.log(x.name);\n          x.update({type: 'consumable', 'data.consumableType': 'food', 'data.uses.autoDestroy': true});\n        }\n        \n    });\n    console.log(\"FIM\")\n})();\n\n\n\n\n    //await game.items.contents.map(item=>{\n        //if(item.name != null){\n        //console.log(item.folder.name)\n        //if(item.folder.name == changeFolder){\n           //console.log(\"Name\", item)\n        //item.update({type: 'consumable', 'data.consumableType': 'food', 'data.uses.autoDestroy': true});\n        //}\n        //}\n        \n    //})","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"cf":{"id":"temp_1obgq4p2j0q","path":"Generators","color":"#000000"}},"_id":"cFmZEvLi38bkA8Xl"}
{"name":"#[CF_tempEntity]","type":"chat","author":"7qbBJORkk2z0FBTX","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"cf":{"id":"temp_1obgq4p2j0q","path":"Generators","color":"#000000","name":"Generators","children":["8SuCNj9QC9hGayVa","sfwIdnImby8sxWfa","cFmZEvLi38bkA8Xl","pfamJ7hkUvTBrCzL"],"folderPath":[]}},"_id":"cFzAFU5QtDzReovb"}
{"name":"PoolFlags","type":"script","author":"7qbBJORkk2z0FBTX","img":"icons/svg/dice-target.svg","scope":"global","command":"//console.log(token.id);\n//console.log(args)\nlet pool = new Innocenti.PoolFlags(token.id, ...args);\nif(event == 'leave') pool.remove = true;\npool.AddPool();\npool.RemovePool();","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true},"cf":{"id":"temp_1z2ppbh1u8p","path":"Automação Master","color":"#0080ff"},"core":{"sourceId":"Compendium.innocenti-actions.automation-macros.o8zxazJfUPDgD8Bl"}},"_id":"dkpT9wpKh8ZICAd5"}
{"name":"DAEDamage","type":"script","author":"7qbBJORkk2z0FBTX","img":"icons/skills/wounds/blood-spurt-spray-red.webp","scope":"global","command":"// DAEDamage damege type\n\nconst lastArg = args[args.length-1];\nlet atype = args[2]\nlet adamage = args[1]\nlet ttoken = DAE.DAEfromUuid(lastArg.tokenUuid); // better since it gets the token no matter what scene it is on\nlet casterItem = DAE.DAEfromUuid(lastArg.origin); // better since it gets the item on the synthetic actor\nlet aactor = casterItem.actor;\nif (aactor.uuid === lastArg.actorUuid) return; // don't trigger on the troll\nconsole.log(casterItem, args, \"ORGS\");\n\nif (args[0] === \"each\" || \"on\") {\n    let damageRoll = new Roll(adamage,{async:false}).roll();\n    new MidiQOL.DamageOnlyWorkflow(aactor,null,damageRoll.total,atype,[ttoken], damageRoll,{itemCardId: \"new\", itemData:casterItem.data});\n}","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":true},"cf":{"id":"temp_su2fbzyh8r","path":"DAE","color":"#800000"}},"_id":"g1RYXlZ37Iio9Pbu"}
{"name":"Checks","type":"script","author":"7qbBJORkk2z0FBTX","img":"icons/svg/dice-target.svg","scope":"global","command":"//args[0] = skill\n//args[1] = dificult\n//args[2] = sucess\n//args[3] = fail\n//args[4] = flags\n//console.log(token.id,game.user.id,args);\nconsole.log(args);\nlet checks = new Innocenti.Checks(game.user,token);\nchecks.Check(...args);","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_1z2ppbh1u8p","path":"Automação Master","color":"#0080ff"},"core":{"sourceId":"Compendium.innocenti-actions.automation-macros.ksHWjfSLEJIPPbFA"}},"_id":"gNukDjiPOdBAEXU1"}
{"name":"Update tokens to Actor","type":"script","author":"7qbBJORkk2z0FBTX","img":"icons/svg/dice-target.svg","scope":"global","command":"(async () => {\n  let updates = canvas.scene.data.tokens.map(t => {\n    let tactor = game.actors.entities.find(a => a.name === t.name);\n        if (tactor) {\n            return {\n                _id: t._id,\n                actorId: tactor.id\n            }\n        } else {\n            console.log(t.name);\n            return {\n                _id: t._id,\n                actorId: \"\"\n            }\n        }\n  });\n  await canvas.scene.updateEmbeddedEntity(\"Token\", updates);\n})();","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_1obgq4p2j0q","path":"Generators","color":"#000000"},"core":{"sourceId":"Compendium.innocenti-actions.automation-macros.P1yN1NvtrlEiVUAi"}},"_id":"pfamJ7hkUvTBrCzL"}
{"name":"#[CF_tempEntity]","type":"chat","author":"7qbBJORkk2z0FBTX","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"cf":{"id":"temp_1z2ppbh1u8p","path":"Automação Master","color":"#0080ff","name":"Automação Master","children":["7qNAt7Vx40y63bd3","IuvO6w3YtJmjUGcf","gNukDjiPOdBAEXU1","Or6VL0dO08ZrSvU5","JozN50QPQYV8A2i6","dkpT9wpKh8ZICAd5","bJFiyTFwdbqsuIkg","5bl99S0mf8q6keOO"],"folderPath":[]}},"_id":"priS5T7OM5kOZ8Lb"}
{"_id":"rPvuSeJV9GD4f0o7","name":"Visitar","type":"script","author":"7qbBJORkk2z0FBTX","img":"icons/environment/settlement/house-farmland-small.webp","scope":"global","command":"let visitar = InnocentiWorld.Visitar();","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"macro-marker":{"activeData":{"icon":"icons/svg/hanging-sign.svg","tooltip":"Visitar","colour":"#80ff80","trigger":""}},"cf":{"id":"temp_3rrfyxwmoc3","path":"Player Macros","color":"#e4950c"},"core":{"sourceId":"Compendium.innocenti-actions.automation-macros.AN84WHe2g38no7vo"}}}
{"name":"Update Cite Journal","type":"script","author":"7qbBJORkk2z0FBTX","img":"icons/svg/dice-target.svg","scope":"global","command":"const actorNames = game.actors.map(actor => actor.name).filter((value, index, self) => self.indexOf(value) === index);\nconst journalNames = game.journal.map(journal => journal.name).filter((value, index, self) => self.indexOf(value) === index);\n\nconst indexCite = {\n    Actor: actorNames,\n    JournalEntry: journalNames\n    }\n\ngame.journal.forEach(entry => {\n    //console.log(entry.entity)\n    if(entry.folder !== null && entry.folder.name !== \"UPDATE\") return;\n    let newcontent = entry.data.content;\n    for(const [key, value] of Object.entries(indexCite)){\n        let entityType = key;\n        for (let i = 0; i < value.length; i++) {\n            let strName = value[i];\n            let str = `(?!\\\\[)\\\\b${strName}\\\\b(?![\\\\w\\\\s]*[\\\\]\\\\}])`;\n            //let str = `\\\\b${strName}(?=[^\\\\}\\\\]\\\\w])`;\n            let regEx = new RegExp(str, 'g');\n            if(value[i] != entry.name){\n                //console.log(regEx);\n                if(newcontent == null) return;\n                newcontent = newcontent.replace(regEx, `@${entityType}[${value[i]}]{${value[i]}}`);\n            }else{\n               newcontent = newcontent.replace(regEx, `<strong>${value[i]}</strong>`); \n            }\n        }\n        //console.log(newcontent);\n        entry.update({ content: newcontent });\n    }\n    //console.log(newcontent);\nui.notifications.info(\"Atualizou as citações nos journals\")\n    console.log(\"FIM\");\n});\nfunction escapeRegExp(string) {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"furnace":{"runAsGM":false},"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"Update Cite Journal","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"cf":{"id":"temp_1obgq4p2j0q","path":"Generators","color":"#000000"},"core":{"sourceId":"Compendium.innocenti-actions.automation-macros.aJos5nKyMzGXkg0Y"}},"_id":"sfwIdnImby8sxWfa"}
{"name":"#[CF_tempEntity]","type":"chat","author":"7qbBJORkk2z0FBTX","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"permission":{"default":0,"7qbBJORkk2z0FBTX":3},"flags":{"cf":{"id":"temp_su2fbzyh8r","path":"DAE","color":"#800000","name":"DAE","children":["4EajVmBeykAvlCMH","XlWVeQF1N4CElhVS","g1RYXlZ37Iio9Pbu","PUsvpFdnVxWfSBV7","GleU4MhKrB9p3iqY","UszeMXETmSfr5Jp7"],"folderPath":[]}},"_id":"xdG0gALmucMN0Qtm"}
