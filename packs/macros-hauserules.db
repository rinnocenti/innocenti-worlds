{"name":"SeeID","permission":{"default":0,"bE4FsemgBF2CPXB2":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false}},"scope":"global","command":"//Display Name & IDs\r\nfor(let token of canvas.tokens.controlled)\r\n{\r\n    ChatMessage.create({\r\n        content : token.name + \" \" + token.id\r\n    });\r\n}\r\n\r\nfor(let wall of canvas.walls.controlled)\r\n{\r\n    ChatMessage.create({\r\n        content : wall.name + \" \" + wall.id\r\n    })\r\n}\r\n/*\r\nfor(let light of canvas.lighting.activate)\r\n{\r\n    ChatMessage.create({\r\n        content : light.name + \" \" + light.id\r\n    })\r\n}\r\nfor (let note of canvas.notes.placeables)\r\n{\r\n    ChatMessage.create({\r\n        content :  note.name + \" \" + note.id\r\n     });\r\n}\r\n*/\r\nfor (let draw of canvas.drawings.controlled)\r\n{\r\n   ChatMessage.create({\r\n      content :  draw.name + \" \" + draw.id\r\n   });\r\n}\r\n\r\nfor (let tile of canvas.tiles.controlled)\r\n{\r\n    ChatMessage.create({\r\n        content :  tile.name + \" \" + tile.id\r\n     });\r\n}","author":"bE4FsemgBF2CPXB2","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"5g5M5rzPz0K6E42w"}
{"name":"EncouterScene","permission":{"default":0,"bE4FsemgBF2CPXB2":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true}},"scope":"global","command":"//args[0] = 10;\r\nlet encounter = new InnocentiEncounters.Encounters();\r\nawait encounter.RegistryEncounter(args[0],args[1]);\r\nawait encounter.RollTable(args[1]);\r\nawait console.log(encounter);","author":"bE4FsemgBF2CPXB2","img":"icons/svg/d20-highlight.svg","actorIds":[],"_id":"826JFrhoz1XzuWNd"}
{"name":"Descanço Longo (Tempo)","permission":{"default":0,"XH24HWwqaZhSywRV":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false}},"scope":"global","command":"game.Gametime.advanceTime({hours: -8}) ","author":"XH24HWwqaZhSywRV","img":"icons/svg/clockwork.svg","actorIds":[],"_id":"CYxiVYFI3dRnBjoF"}
{"name":"Remove Flags","permission":{"default":0,"bE4FsemgBF2CPXB2":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false}},"scope":"global","command":"for (let t of canvas.tokens.placeables) {\r\nif(t.getFlag(`world`, `worldTrigger`))\r\n        await t.unsetFlag(`world`, `worldTrigger`);\r\n}\r\nawait console.log(\"Fim dos tokens\");\r\nawait console.log(canvas.tokens.controlled[0].data.flags);\r\nfor (let t of game.users) {\r\nif(t.getFlag(`world`, `worldTrigger`))\r\n        await t.unsetFlag(`world`, `worldTrigger`);\r\n}\r\nawait console.log(\"Fim dos usuários\");\r\nawait console.log(game.user.data.flags);","author":"bE4FsemgBF2CPXB2","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"YobficmbJwFClqQP"}
{"name":"Create Tables By Rarity","permission":{"default":0,"XH24HWwqaZhSywRV":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false}},"scope":"global","command":"game.betterTables.createTableFromCompendium(\"Full Table Fishs\",\r\n    //\"dnd5e.items\",\r\n    \"mod-my-world.item-foods\",\r\n    { weightPredicate: predicate }\r\n);\r\n\r\nfunction predicate(entity) {\r\n    if(entity.type != \"loot\") return 0;\r\n    //if(entity.data.data.consumableType != \"food\") return 0;\r\n    if(entity.data.data.source != \"Fish\") return 0;\r\n    switch (entity.data.data.rarity) {\r\n        case \"Common\":\r\n            return 16;\r\n        case \"Uncommon\":\r\n            return 8;\r\n        case \"Rare\":\r\n            return 4;\r\n        case \"Very rare\":\r\n            return 2;\r\n        case \"Legendary\":\r\n            return 1;\r\n        default:\r\n            return 0;\r\n    }\r\n}","author":"XH24HWwqaZhSywRV","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"uqhL0gLIVUzjDden"}
{"name":"LongRest","permission":{"default":0,"bE4FsemgBF2CPXB2":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true}},"scope":"global","command":"let status = InnocentiReset.LongRest(args[1]);","author":"bE4FsemgBF2CPXB2","img":"icons/svg/sleep.svg","actorIds":[],"_id":"ymNjNDarngRReikp"}
{"name":"Edit Compendiums","permission":{"default":0,"hfVBUA9x0nVqLlXX":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false}},"scope":"global","command":"let packname = \"innocenti-worlds.handout\";\r\n//let newpackname = \"innocenti-worlds.citys\";\r\n//let oldpackname = \"mod-my-world.citys\";\r\n\r\nlet pack = game.packs.get(packname);\r\nlet cpack = await pack.getContent();\r\ncpack.forEach(entry => {\r\nlet content = entry.data.content;\r\n//let matches = content.match(/@\\w*\\[([\\w.-]+)\\]\\{([\\w.-\\s]+)\\}/g);\r\n//var newstring = content.replace(/(mod[-]my[-]world)/, \"innocenti-worlds\");\r\n//newstring = newstring.replace(\"mod-my-world.locals\", \"innocenti-worlds.locals\");\r\nlet matches = content.replace(/mod-my-world/g, 'innocenti-worlds');\r\nentry.update({ content:  matches}); \r\n})\r\n\r\nawait console.log(\"FIM\");\r\n\r\n","author":"hfVBUA9x0nVqLlXX","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"IEhvAtNQo7hIBUTv"}
{"name":"Import from Compendium","permission":{"default":0,"hfVBUA9x0nVqLlXX":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false}},"scope":"global","command":"let packOptions = game.packs.map(pack => `<option value=\"${pack.collection}\">${pack.title}</option>`);\r\nconst form = `\r\n  <div style=\"display: inline-block; width: 100px\">Folder:</div>\r\n  <input type=\"string\" id=\"folderName\">\r\n  <br />\r\n  <div style=\"font-size: 80%\">leave blank to put into root directory</div>\r\n  <br />\r\n\r\n  <div style=\"display: inline-block; width: 100px\">Compendium:</div>\r\n  <select id=\"destinationPack\" />\r\n    ${packOptions}\r\n  </select>\r\n  <br />\r\n\r\n  <label>\r\n    <input type=\"checkbox\" id=\"delete\"/>\r\n    Clear destination first\r\n  </label>\r\n`;\r\n\r\nconst dialog = new Dialog({\r\n  title: \"Import data from compendium\",\r\n  content: form,\r\n  buttons: {\r\n    use: {\r\n      label: \"Apply\",\r\n      callback: importCompendium\r\n    }\r\n  }\r\n}).render(true);\r\n\r\nfunction importCompendium(html) {\r\n  const folderName = html.find(`input#folderName`)[0].value;\r\n  const packName = html.find(`select#destinationPack`)[0].value;\r\n  const remove = html.find(`input#delete`)[0].checked;\r\n\r\n  let pack = game.packs.get(packName);\r\n  let folder = game.folders.find(f => f.name === folderName && f.type === pack.entity)?.id;\r\n  let type = pack.metadata.entity.toLowerCase();\r\n  type = type === 'journalentry' ? 'journal' : type + 's';\r\n  let extra = folder ? { folder } : null\r\n\r\n  if (folderName && !folder) {\r\n    return ui.notifications.error(`Your world does not have any ${type} folders named '${folderName}'.`);\r\n  }\r\n\r\n  if (remove) {\r\n    game[type].filter(t => t.data.folder === folder)?.delete();\r\n  }\r\n  pack.getIndex().then(index => index.forEach(entry => game[type].importFromCollection(packName, entry._id, extra)));\r\n}","author":"hfVBUA9x0nVqLlXX","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"QXuPIQKeXtB9zP1U"}
{"name":"Update Tiles","permission":{"default":0,"hfVBUA9x0nVqLlXX":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false}},"scope":"global","command":"let addr = \"assets/scenes/background/\";\r\nfor (let tiles of canvas.tiles.placeables) {\r\nlet oldimg = tiles.data.img;\r\nvar newstring = oldimg.replace(\"modules/mod-my-world/assets/scenes/background/\", addr);\r\nconsole.log(newstring);\r\ntiles.update({img:`${newstring}`});\r\n}\r\n//canvas.tiles.placeables[0].update({img:\"assets/scenes/background/The_Dessarin_Valley/tile_31.png\"})","author":"hfVBUA9x0nVqLlXX","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"dK5JNJJ3FXnhjCsJ"}
