{"_id":"1uvfVdTSJskYZ9FP","name":"EncouterActiveScene","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true},"cf":{"id":"temp_z93mlyejk7r","path":"Automação","color":"#0080c0"}},"scope":"global","command":"//args[0] = 10;\nif(!args[1])\n    args[1] = `Encounter ${game.scenes.active.name}`;\nlet encounter = new InnocentiEncounters.Encounters();\n\nif(args[0])\n    await encounter.RegistryEncounter(args[0],args[1]);\nawait encounter.RollTable(args[1]);\nawait console.log(encounter);","author":"X4uo406iXTm4HkVN","img":"systems/dnd5e/icons/skills/yellow_20.jpg","actorIds":[]}
{"name":"RollTable: Research Complications","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/d20-grey.svg","tooltip":"RollTable: Research Complications","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_7iwojogai4y","path":"Roll Tables","color":"#008000"}},"scope":"global","command":"game.tables.getName(\"Research Complications\").draw();","author":"X4uo406iXTm4HkVN","img":"icons/sundries/books/book-embossed-gold-red.webp","actorIds":[],"_id":"2F9TRRH22bROWPxs"}
{"name":"teste movimento","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true},"cf":{"id":"temp_7aunl0f645q","path":"Amostras","color":"#000000"}},"scope":"global","command":"let move= [0,5];\nlet face = token.data.rotation;\nlet g = canvas.scene.data.grid;\nlet mov = [0,0];\nconsole.log(face);\nif(face > -90 && face < 90 || face >= 0 && face > 270){\n    console.log(\"baixo\");\n    mov[1] = move[1];\n    if(move[0] != 0) \n        mov[0] = move[0] * -1;\n}\nif(face > 0 && face < 180 ||  face < -180 && face > -360){\n    console.log(\"esquerda\")\n    mov[0] = move[1] * -1;\n    if(move[0] != 0) \n    mov[1] = move[0] * -1;\n}\nif(face < -90 && face > -270 || face > 90 && face < 270){\n    console.log(\"cima\")\n    mov[1] = move[1] * -1;\n    if(move[0] != 0) \n        mov[0] = move[1];\n}\nif(face < 0 && face > -180 || face > 180 && face < 360){\n    console.log(\"direita\")\n    mov[0] = move[1];\n    if(move[0] != 0) \n    mov[1] = move[1];\n}\n\nlet newX = (token.x + (g * mov[0]));\nlet newY = (token.y + (g * mov[1]));\nconsole.log(mov, newY, newX);\ncanvas.tokens.controlled[0]._noAnimate = true\ntoken.update({x: newX, y:newY});","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"2oC4Hl6VwhWCQSnv"}
{"_id":"49lRsoUEsJVIcXYT","name":"PoolCheck","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_xytjaezjpbo","path":"Automação#/CF_SEP/Automação Master","color":"#0080ff"}},"scope":"global","command":"//console.log(args);\nlet pool = new Innocenti.PoolCheck(game.user,token);\npool.Check(...args);","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[]}
{"_id":"4pVv84MZ9cYoW2L4","name":"Create Tables By Rarity","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"Create Tables By Rarity ","colour":"#ff0000","trigger":""}},"cf":{"id":"temp_sbdj3lav1lq","path":"Amostras#/CF_SEP/Generators","color":"#000000"}},"scope":"global","command":"game.betterTables.createTableFromCompendium(\"Sub Table Recipes Legendary\",\n    //\"dnd5e.items\",\n    \"innocenti-worlds.item-recipes\",\n    { weightPredicate: predicate }\n);\n\nfunction predicate(entity) {\n    //if(entity.type != \"loot\") return 0;\n    if(entity.data.data.consumableType != \"food\") return 0;\n    if(entity.data.data.rarity != \"Legendary\") return 0;\n    //if(entity.data.data.price != 1000) return 0;\n    /*\n    switch (entity.data.data.rarity) {\n        case \"Common\":\n            return 16;\n        case \"Uncommon\":\n            return 8;\n        case \"Rare\":\n            return 4;\n        case \"Very rare\":\n            return 2;\n        case \"Legendary\":\n            return 1;\n        default:\n            return 0;\n    }\n*/\n}","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[]}
{"_id":"56ZTFuhU3x3cDNDB","name":"AutoRollTableCriticalHit","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.4kvkhvolN7IG3tm1"},"cf":{"id":"temp_xytjaezjpbo","path":"Automação#/CF_SEP/Automação Master","color":"#0080ff"}},"scope":"global","command":"if(args[0].attackRoll !== undefined && args[0].isCritical){\n    game.tables.getName(\"Acerto Crítico\").draw();\n}else if(args[0].attackRoll !== undefined && args[0].isFumble){\n    game.tables.getName(\"Erro Crítico\").draw();\n}","author":"X4uo406iXTm4HkVN","img":"icons/svg/d20-highlight.svg","actorIds":[]}
{"_id":"5AZEM18rNJXzskIG","name":"Update Tokens Weapons MidiMacro","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.7KWn7kV8paHkY2XC"},"cf":{"id":"temp_7aunl0f645q","path":"Amostras","color":"#000000"}},"scope":"global","command":"let macroname = \"AutoRollTableCriticalHit\";\n\n(async () => {\n    canvas.tokens.placeables.map(a => {\n        if(!a.actor) return console.log(a.name)\n        a.actor.items.map(b => {\n            if (b.type === 'weapon' && (b.data.data.actionType === 'mwak' || b.data.data.actionType ==='rwak' || b.data.data.actionType ==='msak' || b.data.data.actionType ==='rsak')) {\n                console.log(b.name)\n                b.setFlag('midi-qol','onUseMacroName', macroname);\n            }\n        })\n    })\nconsole.log(\"Fim - Tokens On Map\")\n})();","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[]}
{"_id":"6BtGKmklvEIi36N0","name":"Update Actors Weapons MidiMacro","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.7KWn7kV8paHkY2XC"},"cf":{"id":"temp_7aunl0f645q","path":"Amostras","color":"#000000"}},"scope":"global","command":"let macroname = \"AutoRollTableCriticalHit\";\n\n(async () => {\n    game.actors.forEach(a => {\n        a.items.map(b => {\n            if (b.type === 'weapon' && (b.data.data.actionType === 'mwak' || b.data.data.actionType ==='rwak' || b.data.data.actionType ==='msak' || b.data.data.actionType ==='rsak')) {\n            console.log(b.name)\n                b.setFlag('midi-qol','onUseMacroName', macroname);\n            }\n        })\n    })\nconsole.log(\"Fim - Actors on Game\");\n})();","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[]}
{"name":"#[CF_tempEntity]","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"chat","flags":{"cf":{"id":"temp_1wixx6as5pj","path":"DAE","color":"#800000","name":"DAE","children":["nEl7iFhyJaHR8JvV","Xjd9FfJLJqZqJr73","LadveiqOuZ8alEYp","cDRwSy2yGKb80zxO","w2bLSRS0326v45pk","d2OuKcbeO0o53zhJ","vJNB3G0cC8LVBbgx","oazlmnKwPTeCsAKG","7e1Ggusc7R5eYK0X","VEmKbV6xSPl4v3jY","EHSkswVF9UCAI0lz","KiW0QWxf5jiWiti2","PdsiGpwvloC0e0T3","9HN1BvNhBWTFJFPs","Iui3JBZDFxS3J1Q4"],"folderPath":[]}},"scope":"global","command":"","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"7YOh9VI23mY4eXmO"}
{"name":"DAERepeat","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_1wixx6as5pj","path":"DAE","color":"#800000"}},"scope":"global","command":"//DAERepeat @token @target itemName\nif(args[0] === 'each'){\n    console.log(\"EACH\", args);\n    let atoken = canvas.tokens.get(args[1]);\n    let atarget = canvas.tokens.get(args[2]);\n    let saveTargets = game.user.targets;\n    let damageItem = atoken.actor.items.getName(args[3]);\n    let aCondition = damageItem.data.data.activation.condition;\n    \n    if(aCondition && game.cub.hasCondition(aCondition, atarget)){\n        await atoken.actor.deleteEmbeddedEntity(\"ActiveEffect\", effectId);\n        return;\n    }\n    game.user.targets = new Set([atarget]);\n    try {\n        damageItem.roll();\n    } finally {\n        game.user.targets = saveTargets;\n    }\n}","author":"X4uo406iXTm4HkVN","img":"assets/icons/icones-flat/Icon.4_03.png","actorIds":[],"_id":"7e1Ggusc7R5eYK0X"}
{"_id":"7fY21QBZlrZYAcen","name":"Update Cite Journal","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"furnace":{"runAsGM":false},"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"Update Cite Journal","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"cf":{"id":"temp_sbdj3lav1lq","path":"Amostras#/CF_SEP/Generators","color":"#000000"}},"scope":"global","command":"const actorNames = game.actors.map(actor => actor.name).filter((value, index, self) => self.indexOf(value) === index);\nconst journalNames = game.journal.map(journal => journal.name).filter((value, index, self) => self.indexOf(value) === index);\n\nconst indexCite = {\n    Actor: actorNames,\n    JournalEntry: journalNames\n    }\n\ngame.journal.forEach(entry => {\n    //console.log(entry.entity)\n    if(entry.folder !== null && entry.folder.name !== \"UPDATE\") return;\n    let newcontent = entry.data.content;\n    for(const [key, value] of Object.entries(indexCite)){\n        let entityType = key;\n        for (let i = 0; i < value.length; i++) {\n            let strName = value[i];\n            let str = `(?!\\\\[)\\\\b${strName}\\\\b(?![\\\\w\\\\s]*[\\\\]\\\\}])`;\n            //let str = `\\\\b${strName}(?=[^\\\\}\\\\]\\\\w])`;\n            let regEx = new RegExp(str, 'g');\n            if(value[i] != entry.name){\n                //console.log(regEx);\n                if(newcontent == null) return;\n                newcontent = newcontent.replace(regEx, `@${entityType}[${value[i]}]{${value[i]}}`);\n            }else{\n               newcontent = newcontent.replace(regEx, `<strong>${value[i]}</strong>`); \n            }\n        }\n        //console.log(newcontent);\n        entry.update({ content: newcontent });\n    }\n    //console.log(newcontent);\nui.notifications.info(\"Atualizou as citações nos journals\")\n    console.log(\"FIM\");\n});\nfunction escapeRegExp(string) {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[]}
{"name":"Switch Light","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_xytjaezjpbo","path":"Automação#/CF_SEP/Automação Master","color":"#0080ff"}},"scope":"global","command":"game.LightSwitch.flipTheSwitch(\"lightgroup1\")","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"8fviqlE7wXGs6d0t"}
{"name":"DAERollTable","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_1wixx6as5pj","path":"DAE","color":"#800000"}},"scope":"global","command":"//DAERollTable Tablename\nif(args[0] === \"each\"){\n    game.tables.getName(args[1]).draw();\n}","author":"X4uo406iXTm4HkVN","img":"icons/svg/d20.svg","actorIds":[],"_id":"9HN1BvNhBWTFJFPs"}
{"name":"#[CF_tempEntity]","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"chat","flags":{"cf":{"id":"temp_7iwojogai4y","path":"Roll Tables","color":"#008000","name":"Roll Tables","children":["dVIg2aMei4YIKesf","db2LTYvcj6MuF1Ij","nOQ96NaqgJc7lYdg","fIdXNkAGC392XMbO","2F9TRRH22bROWPxs"],"folderPath":[]}},"scope":"global","command":"","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"A6BdKFY2DEqmIQSY"}
{"_id":"AJEdfaiVTADKChfp","name":"Fix Journals (change compendium links)","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"furnace":{"runAsGM":true},"cf":{"id":"temp_sbdj3lav1lq","path":"Amostras#/CF_SEP/Generators","color":"#000000"}},"scope":"global","command":"//TROCA OS LINKS DE COMPENDIUM PARA LINKS DO MUNDO.\r\n// COM ECXESSÃO DOS ITEMS QUE MANTÉM NO COMPENDIUM\r\nlet count = 0;\r\ngame.journal.forEach(entry => {\r\n    let content = entry.data.content;\r\n    let matches = content.match(/@\\w*\\[([0-9A-Za-záàâãéèêíïóôõöúçñÁÀÂÃÉÈÍÏÓÔÕÖÚÇÑ.\\- ]+)\\]?(\\{([0-9A-Za-záàâãéèêíïóôõöúçñÁÀÂÃÉÈÍÏÓÔÕÖÚÇÑ;&.\"()\\- ]+)\\})/g);\r\n\r\n    // now we have an array of things such as @Actor[5c8HWfrpvRV4XtZ1]\r\n    if (matches == null) return;\r\n    let newcontent = content;\r\n    \r\n    let uniqueMatches = matches\r\n        .filter((value, index, self) => self.indexOf(value) === index) //unique matches\r\n        .forEach(str => {\r\n            count++;\r\n            let firstdata = str.slice(0, -1).split('{');\r\n            let pName = firstdata[1];\r\n            //console.log(firstdata);\r\n            let arrayData = firstdata[0].slice(1, -1).split('['); // cut off the @ and ] then make [0] the type and [1] the id.\r\n            // since the reference may not match directly with the game entity type, lets look that up.\r\n            //console.log(arrayData, pName)\r\n            if (arrayData[0] != 'Compendium') return;\r\n            let pck = arrayData[1].split('.');\r\n            let packname = `${pck[0]}.${pck[1]}`;\r\n            //console.log(packname);\r\n            let id = pck[2];\r\n            let entityType = getEntityType(arrayData[0]);\r\n            \r\n            // with the id and our entity type, look up the name of the entry.\r\n            let packs = game[entityType].get(packname);\r\n            \r\n            if(packs == null){ return console.log(`Não Existe Um compendium com o nome: ${packname} com o item ${entry.name}`)}\r\n            let newEntity = packs.entity;\r\n            //console.log(newEntity);\r\n            if (newEntity === 'Item') return;\r\n            let pindex = packs.index.find(element => element._id === id) || packs.index.find(element => element.name === pName);\r\n            \r\n            if (!pindex) {\r\n                //console.log(packs.index.find(element => element.name == pName), pName, newEntity, packname);\r\n                //return ui.notifications.error(`Could not find any record for the entity type ${entityType} in pack ${packs} with the id of ${id}`);\r\n            }\r\n            let name = (pindex) ? pindex.name : htmlDecode(pName);\r\n            console.log(name);\r\n\r\n            if (!name) {\r\n                return ui.notifications.error(`Could not find any record for the entity type ${entityType} with the id of ${arrayData[0]}`);\r\n            }\r\n            let changeEntry = (name !== '') ? `@${packs.entity}[${name}]` : '';\r\n            //console.log(changeEntry);\r\n            let newstr = escapeRegExp(firstdata[0]);\r\n            console.log(`updating ${id} with ${name}`);\r\n            let regEx = new RegExp(newstr, 'g');\r\n            //console.log(regEx);\r\n            newcontent = newcontent.replace(regEx, changeEntry);\r\n            //console.log(newcontent);\r\n        });\r\n    entry.update({ content: newcontent });\r\n});\r\nconsole.log(count);\r\n\r\nfunction escapeRegExp(string) {\r\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\r\n}\r\nfunction getEntityType(entity) {\r\n    switch (entity) {\r\n        case 'JournalEntry': return 'journal';\r\n        case 'RollTable': return 'tables';\r\n        case 'Compendium': return 'packs';\r\n        default: return entity.toLowerCase() + 's';\r\n    }\r\n}\r\n\r\nfunction htmlDecode(input) {\r\n  var doc = new DOMParser().parseFromString(input, \"text/html\");\r\n  return doc.documentElement.textContent;\r\n}","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[]}
{"name":"Create Tables By Rarity","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"Create Tables By Rarity ","colour":"#ff0000","trigger":""}},"cf":{"id":"temp_sbdj3lav1lq","path":"Amostras#/CF_SEP/Generators","color":"#000000"}},"scope":"global","command":"game.betterTables.createTableFromCompendium(\"Sub Table Recipes Legendary\",\n    //\"dnd5e.items\",\n    \"innocenti-worlds.item-recipes\",\n    { weightPredicate: predicate }\n);\n\nfunction predicate(entity) {\n    //if(entity.type != \"loot\") return 0;\n    if(entity.data.data.consumableType != \"food\") return 0;\n    if(entity.data.data.rarity != \"Legendary\") return 0;\n    //if(entity.data.data.price != 1000) return 0;\n    /*\n    switch (entity.data.data.rarity) {\n        case \"Common\":\n            return 16;\n        case \"Uncommon\":\n            return 8;\n        case \"Rare\":\n            return 4;\n        case \"Very rare\":\n            return 2;\n        case \"Legendary\":\n            return 1;\n        default:\n            return 0;\n    }\n*/\n}","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"ASRHIwjmQVqSV6Zs"}
{"_id":"BY8gK3jZ7RMP9F8C","name":"Open Chest","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"core":{"sourceId":"Macro.UXJLvaOUS8ANMPkp"},"furnace":{"runAsGM":false},"cf":{"id":"temp_z93mlyejk7r","path":"Automação","color":"#0080c0"}},"scope":"global","command":"let actions = new InnocentiOpenLock.Actions('OpenLock');","author":"X4uo406iXTm4HkVN","img":"icons/containers/chest/chest-reinforced-box-brown.webp","actorIds":[]}
{"name":"Create Tables By Rarity","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"Create Tables By Rarity ","colour":"#ff0000","trigger":""}},"cf":{"id":"temp_sbdj3lav1lq","path":"Amostras#/CF_SEP/Generators","color":"#000000"}},"scope":"global","command":"game.betterTables.createTableFromCompendium(\"Sub Table Recipes Legendary\",\n    //\"dnd5e.items\",\n    \"innocenti-worlds.item-recipes\",\n    { weightPredicate: predicate }\n);\n\nfunction predicate(entity) {\n    //if(entity.type != \"loot\") return 0;\n    if(entity.data.data.consumableType != \"food\") return 0;\n    if(entity.data.data.rarity != \"Legendary\") return 0;\n    //if(entity.data.data.price != 1000) return 0;\n    /*\n    switch (entity.data.data.rarity) {\n        case \"Common\":\n            return 16;\n        case \"Uncommon\":\n            return 8;\n        case \"Rare\":\n            return 4;\n        case \"Very rare\":\n            return 2;\n        case \"Legendary\":\n            return 1;\n        default:\n            return 0;\n    }\n*/\n}","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"BZYN0yruprt6mYbI"}
{"_id":"C5nkh6I6T91y2zO4","name":"Find Trap","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"core":{"sourceId":"Macro.4MODdS79QhACoEd9"},"furnace":{"runAsGM":false},"cf":{"id":"temp_z93mlyejk7r","path":"Automação","color":"#0080c0"}},"scope":"global","command":"let actions = new InnocentiOpenLock.Actions('FindLockTrap');","author":"X4uo406iXTm4HkVN","img":"icons/tools/scribal/magnifying-glass.webp","actorIds":[]}
{"name":"Enable AutoRotate","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true},"cf":{"id":"temp_7aunl0f645q","path":"Amostras","color":"#000000"}},"scope":"global","command":"(async function(){\n  let content = `\n    <form><div class=\"form-group\">\n      <label>Enable/Disable Autorotation for All Tokens:</label>\n      <input type=\"checkbox\" id=\"ar-enabled\" value=\"0\">\n    </div></form>\n  `;\n\n  async function apply(html){\n    let checked = html.find('#ar-enabled').is(':checked');\n    console.log(`Setting autorotate.enabled flag to ${checked}`);\n\n    for (let actor of game.actors){\n      console.log({actor});\n      console.log({'actor.data.token': actor.data.token});\n      await actor.update({'data.token.flags.autorotate.enabled': checked});\n    }\n\n    for (let scene of game.scenes){\n      await scene.view();\n      for (let token of canvas.tokens.placeables){\n        console.log({token});\n        token.setFlag('autorotate', 'enabled', checked);\n      }\n    }\n\n    console.log('Finished.');\n  }\n\n  new Dialog({\n    content: content,\n    buttons: {\n      apply: {\n        label: \"Apply\",\n        callback: async (html) => {\n          try {\n            apply(html);\n            ui.notifications.info(\"Success\");\n          } catch {\n            ui.notifications.error(\"Error. Check console (F12).\");\n          }\n        }\n      },\n      cancel: {\n        label: \"Cancel\",\n      }\n    }\n  }).render(true);\n\n}())","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"CImuNh1g5fjOOyBM"}
{"_id":"DtxLBsnBRCnCBlak","name":"EncouterScene","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true},"cf":{"id":"temp_xytjaezjpbo","path":"Automação#/CF_SEP/Automação Master","color":"#0080ff"}},"scope":"global","command":"//args[0] = 10;\n//args[1] = game.scenes.active.name;\nlet encounter = new InnocentiEncounters.Encounters();\nawait encounter.RegistryEncounter(args[0],args[1]);\nawait encounter.RollTable(args[1]);\nawait console.log(encounter);","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[]}
{"_id":"E9ptaGJHgYB8d8jd","name":"Actions","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_xytjaezjpbo","path":"Automação#/CF_SEP/Automação Master","color":"#0080ff"}},"scope":"global","command":"//game.macros.entities.find(i => i.name === 'GMActions').execute(game.user.id,token.id,...args);\n\nlet checks = new Innocenti.Actions(game.user,token);\nchecks.Check(...args);","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[]}
{"name":"Greapple","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_1wixx6as5pj","path":"DAE","color":"#800000"}},"scope":"global","command":"// @token @target\nlet target = game.user.targets.values().next().value;\nconsole.log(target.id, token.id, args)\n/*if(args.length > 0){\n    token = canvas.tokens.get(args[1]);\n    target = canvas.tokens.get(args[2]);\n}*/\nif(token.id != target.id){\n    //Começa o agarrão\n    let skill = (target.actor.data.data.skills.ath >= target.actor.data.data.skills.acr) ? 'ath' : 'acr';\n    token.actor.rollSkill('ath').then(async (result) => {\n        let res = await target.actor.rollSkill(skill);\n        if(result.total >= res.total){\n            game.cub.addCondition(\"Grappled\", target);\n        }else if(game.cub.getCondition(\"Grappled\", target)){\n            game.cub.removeCondition(\"Grappled\", target);\n        }\n    });\n}\n\nconsole.log(\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\");","author":"X4uo406iXTm4HkVN","img":"modules/combat-utility-belt/icons/grappled.svg","actorIds":[],"_id":"EHSkswVF9UCAI0lz"}
{"name":"Update Tokens Weapons MidiMacro","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.7KWn7kV8paHkY2XC"},"cf":{"id":"temp_7aunl0f645q","path":"Amostras","color":"#000000"}},"scope":"global","command":"let macroname = \"AutoRollTableCriticalHit\";\n\n(async () => {\n    canvas.tokens.placeables.map(a => {\n        if(!a.actor) return console.log(a.name)\n        a.actor.items.map(b => {\n            if (b.type === 'weapon' && (b.data.data.actionType === 'mwak' || b.data.data.actionType ==='rwak' || b.data.data.actionType ==='msak' || b.data.data.actionType ==='rsak')) {\n                console.log(b.name)\n                b.setFlag('midi-qol','onUseMacroName', macroname);\n            }\n        })\n    })\nconsole.log(\"Fim - Tokens On Map\")\n})();","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"GgihsUDhHmUNDMAg"}
{"name":"Create Tables By Rarity","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"Create Tables By Rarity ","colour":"#ff0000","trigger":""}},"cf":{"id":"temp_sbdj3lav1lq","path":"Amostras#/CF_SEP/Generators","color":"#000000"}},"scope":"global","command":"game.betterTables.createTableFromCompendium(\"Sub Table Recipes Legendary\",\n    //\"dnd5e.items\",\n    \"innocenti-worlds.item-recipes\",\n    { weightPredicate: predicate }\n);\n\nfunction predicate(entity) {\n    //if(entity.type != \"loot\") return 0;\n    if(entity.data.data.consumableType != \"food\") return 0;\n    if(entity.data.data.rarity != \"Legendary\") return 0;\n    //if(entity.data.data.price != 1000) return 0;\n    /*\n    switch (entity.data.data.rarity) {\n        case \"Common\":\n            return 16;\n        case \"Uncommon\":\n            return 8;\n        case \"Rare\":\n            return 4;\n        case \"Very rare\":\n            return 2;\n        case \"Legendary\":\n            return 1;\n        default:\n            return 0;\n    }\n*/\n}","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"Gqrrdc0ZZCjbZ7G5"}
{"name":"Update Tokens Weapons MidiMacro","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.7KWn7kV8paHkY2XC"},"cf":{"id":"temp_7aunl0f645q","path":"Amostras","color":"#000000"}},"scope":"global","command":"let macroname = \"AutoRollTableCriticalHit\";\n\n(async () => {\n    canvas.tokens.placeables.map(a => {\n        if(!a.actor) return console.log(a.name)\n        a.actor.items.map(b => {\n            if (b.type === 'weapon' && (b.data.data.actionType === 'mwak' || b.data.data.actionType ==='rwak' || b.data.data.actionType ==='msak' || b.data.data.actionType ==='rsak')) {\n                console.log(b.name)\n                b.setFlag('midi-qol','onUseMacroName', macroname);\n            }\n        })\n    })\nconsole.log(\"Fim - Tokens On Map\")\n})();","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"HJd6Duq8kDjpPRvK"}
{"_id":"HVBuRNwDkw0Cst41","name":"Edit Compendiums","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_sbdj3lav1lq","path":"Amostras#/CF_SEP/Generators","color":"#000000"}},"scope":"global","command":"let packname = \"innocenti-worlds.handout\";\r\n//let newpackname = \"innocenti-worlds.citys\";\r\n//let oldpackname = \"mod-my-world.citys\";\r\n\r\nlet pack = game.packs.get(packname);\r\nlet cpack = await pack.getContent();\r\ncpack.forEach(entry => {\r\nlet content = entry.data.content;\r\n//let matches = content.match(/@\\w*\\[([\\w.-]+)\\]\\{([\\w.-\\s]+)\\}/g);\r\n//var newstring = content.replace(/(mod[-]my[-]world)/, \"innocenti-worlds\");\r\n//newstring = newstring.replace(\"mod-my-world.locals\", \"innocenti-worlds.locals\");\r\nlet matches = content.replace(/mod-my-world/g, 'innocenti-worlds');\r\nentry.update({ content:  matches}); \r\n})\r\n\r\nawait console.log(\"FIM\");\r\n\r\n","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[]}
{"_id":"ImFM8f56WRbXGwDY","name":"Looting","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.xF8VDI28j7UzkSoG"},"cf":{"id":"temp_z93mlyejk7r","path":"Automação","color":"#0080c0"}},"scope":"global","command":"(async () => {\nlet actions = new InnocentiLoot.Loot();\nawait actions.Check();\n})();","author":"X4uo406iXTm4HkVN","img":"icons/containers/bags/coinpouch-gold-red.webp","actorIds":[]}
{"name":"DAEAttackEnd","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true},"cf":{"id":"temp_1wixx6as5pj","path":"DAE","color":"#800000"}},"scope":"global","command":"// @token @target @item|itemName\n//console.log(\"ON ATACK\", args);\nif(args[0] == \"off\"){\n    let atoken = canvas.tokens.get(args[1]);\n    let atarget = canvas.tokens.get(args[2]);\n    let saveTargets = game.user.targets;\n    let damageItem = (typeof args[3] === 'string') ? atoken.actor.items.find(i => i.name === args[3]) : atoken.actor.items.find(i => i.id === args[3]._id);\n        game.user.targets = new Set([atarget]);\n        try {\n            damageItem.roll();\n        } finally {\n            game.user.targets = saveTargets;\n        }\n}","author":"X4uo406iXTm4HkVN","img":"systems/dnd5e/icons/skills/violet_20.jpg","actorIds":[],"_id":"Iui3JBZDFxS3J1Q4"}
{"name":"#[CF_tempEntity]","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"chat","flags":{"cf":{"id":"temp_xytjaezjpbo","path":"Automação#/CF_SEP/Automação Master","color":"#0080ff","name":"Automação Master","children":["bz53IkdemuY4ovec","uDh4NNBBgYTnM8ue","DtxLBsnBRCnCBlak","LZ6j0kjqo9JEruEm","bvGH5awEQaKTYYpa","XEvC1JPgWffipkFR","49lRsoUEsJVIcXYT","xWAMSzx0NFmHhXqI","p5rhvs3U8SOVdkq9","56ZTFuhU3x3cDNDB","NYxNnzpl3D6LEvvu","E9ptaGJHgYB8d8jd"],"folderPath":["temp_z93mlyejk7r"]}},"scope":"global","command":"","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"JNC6DCpnzb7Wjhq5"}
{"name":"Update Tokens Weapons MidiMacro","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.7KWn7kV8paHkY2XC"},"cf":{"id":"temp_7aunl0f645q","path":"Amostras","color":"#000000"}},"scope":"global","command":"let macroname = \"AutoRollTableCriticalHit\";\n\n(async () => {\n    canvas.tokens.placeables.map(a => {\n        if(!a.actor) return console.log(a.name)\n        a.actor.items.map(b => {\n            if (b.type === 'weapon' && (b.data.data.actionType === 'mwak' || b.data.data.actionType ==='rwak' || b.data.data.actionType ==='msak' || b.data.data.actionType ==='rsak')) {\n                console.log(b.name)\n                b.setFlag('midi-qol','onUseMacroName', macroname);\n            }\n        })\n    })\nconsole.log(\"Fim - Tokens On Map\")\n})();","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"JUWZhI4ndL7iS7TP"}
{"name":"SelfRepeat","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_1wixx6as5pj","path":"DAE","color":"#800000"}},"scope":"global","command":"// usado apra marcar qual inimigo vai repetir o ataque\n// SelfRepeat @token @target @item|itemName end|start\nlet atoken = canvas.tokens.get(args[1]);\nlet atarget = canvas.tokens.get(args[2]);\nlet lastArg = args[args.length-1];\nlet effectId = lastArg.effectId;\nlet macroRepeat = (args[4] && args[4] != lastArg)? 'endEveryTurn':'startEveryTurn';\n\nlet REPEAT_EFFECT = {\n    label: `Repeat_${atarget.name}`,\n    icon: \"assets/icons/icones-flat/Icon.4_03.png\",\n    changes: [\n      {key: \"macro.execute\", \n      value: `DAERepeat ${args[1]} ${args[2]} ${args[3]}`, \n      mode: ACTIVE_EFFECT_MODES.CUSTOM\n      }\n    ],\n    flags: {\n        dae: {\n            macroRepeat: macroRepeat,\n            //specialDuration: [\"turnStart\"]\n        }\n    },\n    transfer: true,\n  };\nlet item = (typeof args[3] === 'string') ? atoken.actor.items.find(i => i.name === args[3]) : atoken.actor.items.find(i => i.id === args[3]._id);\nlet aCondition = item.data.data.activation.condition;\nif(args[0] === 'on'){\n    \n    if(aCondition && game.cub.hasCondition(aCondition, atarget)){\n        await atoken.actor.deleteEmbeddedEntity(\"ActiveEffect\", effectId);\n    }else{\n        let upItem = Object.assign(REPEAT_EFFECT, {_id: item._id});\n        await atoken.actor.createEmbeddedEntity(\"ActiveEffect\", [REPEAT_EFFECT]);\n    }\n}\n\nif(args[0] === 'off'){\n    let eff = atoken.actor.effects.find(i=> i.data.label === `Repeat_${atarget.name}`);\n    console.log(\"REMOVE\", eff)\n    await atoken.actor.deleteEmbeddedEntity(\"ActiveEffect\", eff.id);\n}","author":"X4uo406iXTm4HkVN","img":"assets/icons/icones-flat/Icon.2_72.png","actorIds":[],"_id":"KiW0QWxf5jiWiti2"}
{"name":"00 - A - Delete filters on Selected","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"cf":{"id":"temp_7aunl0f645q","path":"Amostras","color":"#000000"}},"scope":"global","command":"// Delete all filters on the selected tokens/tiles\nTokenMagic.deleteFiltersOnSelected();","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"LHftzy2oDvWXdZti"}
{"_id":"LZ6j0kjqo9JEruEm","name":"LongRest","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"LongRest","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_xytjaezjpbo","path":"Automação#/CF_SEP/Automação Master","color":"#0080ff"}},"scope":"global","command":"if(args[0] == \"off\"){\nlet status = InnocentiReset.LongRest(args[1]);\n}","author":"X4uo406iXTm4HkVN","img":"icons/svg/sleep.svg","actorIds":[]}
{"name":"DAEDamage","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_1wixx6as5pj","path":"DAE","color":"#800000"}},"scope":"global","command":"let adamage = args[1];\nlet atype = args[2];\nlet atoken = canvas.tokens.get(args[3]);\nlet atarget = canvas.tokens.get(args[4]);\nlet lastArg = args[args.length-1];\nlet casterItem = lastArg.efData.flags.dae.itemData;\n\nconsole.log(atoken, atarget);\n//let aactor = game.actors.get(atoken.actor.id)\n\nif (args[0] === \"each\") {\n    let damageRoll = new Roll(adamage).roll();\n    new MidiQOL.DamageOnlyWorkflow(atoken.actor, atoken, damageRoll.total, atype, [atarget], damageRoll,{flavor: `Damage type - (${atype})`, itemCardId: \"new\", itemData: casterItem})\n    \n}","author":"X4uo406iXTm4HkVN","img":"assets/icons/icones-flat/Icon.4_85.png","actorIds":[],"_id":"LadveiqOuZ8alEYp"}
{"name":"Create Tables By Rarity","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"Create Tables By Rarity ","colour":"#ff0000","trigger":""}},"cf":{"id":"temp_sbdj3lav1lq","path":"Amostras#/CF_SEP/Generators","color":"#000000"}},"scope":"global","command":"game.betterTables.createTableFromCompendium(\"Sub Table Recipes Legendary\",\n    //\"dnd5e.items\",\n    \"innocenti-worlds.item-recipes\",\n    { weightPredicate: predicate }\n);\n\nfunction predicate(entity) {\n    //if(entity.type != \"loot\") return 0;\n    if(entity.data.data.consumableType != \"food\") return 0;\n    if(entity.data.data.rarity != \"Legendary\") return 0;\n    //if(entity.data.data.price != 1000) return 0;\n    /*\n    switch (entity.data.data.rarity) {\n        case \"Common\":\n            return 16;\n        case \"Uncommon\":\n            return 8;\n        case \"Rare\":\n            return 4;\n        case \"Very rare\":\n            return 2;\n        case \"Legendary\":\n            return 1;\n        default:\n            return 0;\n    }\n*/\n}","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"NGtZxAXak28GqWec"}
{"name":"Actions","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_xytjaezjpbo","path":"Automação#/CF_SEP/Automação Master","color":"#0080ff"}},"scope":"global","command":"//game.macros.entities.find(i => i.name === 'GMActions').execute(game.user.id,token.id,...args);\n\nlet checks = new Innocenti.Actions(game.user,token);\nchecks.Check(...args);","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"NYxNnzpl3D6LEvvu"}
{"name":"#[CF_tempEntity]","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"chat","flags":{"cf":{"id":"temp_7aunl0f645q","path":"Amostras","color":"#000000","name":"Amostras","children":["5AZEM18rNJXzskIG","s8RzRR4MCgzDwJ1b","RTfA17eP3FDFRbCE","GgihsUDhHmUNDMAg","nFv8EiEhu4WleWFH","JUWZhI4ndL7iS7TP","HJd6Duq8kDjpPRvK","qeF2sAPI5NJGd6k9","6BtGKmklvEIi36N0","ZpbsaNAlrSQEQNVi","h1beztrJXLyORo7S","kHMD7PRbuwjnhtDw"],"folderPath":[]}},"scope":"global","command":"","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"O9FComaMl0mjcLKd"}
{"name":"Create Tables By Rarity","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"Create Tables By Rarity ","colour":"#ff0000","trigger":""}},"cf":{"id":"temp_sbdj3lav1lq","path":"Amostras#/CF_SEP/Generators","color":"#000000"}},"scope":"global","command":"game.betterTables.createTableFromCompendium(\"Sub Table Recipes Legendary\",\n    //\"dnd5e.items\",\n    \"innocenti-worlds.item-recipes\",\n    { weightPredicate: predicate }\n);\n\nfunction predicate(entity) {\n    //if(entity.type != \"loot\") return 0;\n    if(entity.data.data.consumableType != \"food\") return 0;\n    if(entity.data.data.rarity != \"Legendary\") return 0;\n    //if(entity.data.data.price != 1000) return 0;\n    /*\n    switch (entity.data.data.rarity) {\n        case \"Common\":\n            return 16;\n        case \"Uncommon\":\n            return 8;\n        case \"Rare\":\n            return 4;\n        case \"Very rare\":\n            return 2;\n        case \"Legendary\":\n            return 1;\n        default:\n            return 0;\n    }\n*/\n}","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"PHfUZAcLejrXpyJ9"}
{"name":"DAEAura","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true},"cf":{"id":"temp_1wixx6as5pj","path":"DAE","color":"#800000"}},"scope":"global","command":"// DAEAura @token @item self\nconsole.log(args);\nlet atoken = canvas.tokens.get(args[1]);\nlet lastArg = args[args.length-1];\nlet effectId = lastArg.effectId;\nlet atarget=[];\nlet self = (args[3]!== lastArg && args[3] == 'self') ? true : false;\nif(args[0] === 'on' || args[0] === 'each'){\n    if(self && atoken.actor.id != lastArg.actorId) return;\n    canvas.tokens.placeables.map(entity=>{\n        entity.actor.effects.map(ef=>{\n            if(ef.data.origin == lastArg.origin && ef.data.label == lastArg.efData.label){\n                if(entity.actor.id == lastArg.actorId && self){\n                    atarget.push(entity);\n                }else if(entity.actor.id != lastArg.actorId){\n                    atarget.push(entity);\n                }\n            }\n        });\n    });\n    console.log(atoken, atarget);\n    let saveTargets = game.user.targets;\n        game.user.targets = new Set(atarget);\n        try {\n            let damageItem = (typeof args[2] === 'string') ? atoken.actor.items.find(i => i.name === args[2]) : atoken.actor.items.find(i => i.id === args[2]._id);\n            console.log(damageItem);\n            damageItem.roll();\n        } finally {\n            game.user.targets = saveTargets;\n        }\n    \n}","author":"X4uo406iXTm4HkVN","img":"systems/dnd5e/icons/spells/wind-grasp-magenta-2.jpg","actorIds":[],"_id":"PdsiGpwvloC0e0T3"}
{"name":"Update Tokens Weapons MidiMacro","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.7KWn7kV8paHkY2XC"},"cf":{"id":"temp_7aunl0f645q","path":"Amostras","color":"#000000"}},"scope":"global","command":"let macroname = \"AutoRollTableCriticalHit\";\n\n(async () => {\n    canvas.tokens.placeables.map(a => {\n        if(!a.actor) return console.log(a.name)\n        a.actor.items.map(b => {\n            if (b.type === 'weapon' && (b.data.data.actionType === 'mwak' || b.data.data.actionType ==='rwak' || b.data.data.actionType ==='msak' || b.data.data.actionType ==='rsak')) {\n                console.log(b.name)\n                b.setFlag('midi-qol','onUseMacroName', macroname);\n            }\n        })\n    })\nconsole.log(\"Fim - Tokens On Map\")\n})();","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"RTfA17eP3FDFRbCE"}
{"name":"DAEAttack","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_1wixx6as5pj","path":"DAE","color":"#800000"}},"scope":"global","command":"// DAEAttack @token @target @item|itemName\nconsole.log(\"ON ATACK\", args);\nif(args[0] == \"on\" || args[0] == \"each\"){\n    let atoken = canvas.tokens.get(args[1]);\n    let atarget = canvas.tokens.get(args[2]);\n    let saveTargets = game.user.targets;\n    let damageItem = (typeof args[3] === 'string') ? atoken.actor.items.find(i => i.name === args[3]) : atoken.actor.items.find(i => i.id === args[3]._id);\n        game.user.targets = new Set([atarget]);\n        try {\n            damageItem.roll();\n        } finally {\n            game.user.targets = saveTargets;\n        }\n}","author":"X4uo406iXTm4HkVN","img":"systems/dnd5e/icons/skills/weapon_23.jpg","actorIds":[],"_id":"VEmKbV6xSPl4v3jY"}
{"name":"Create Tables By Rarity","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"Create Tables By Rarity ","colour":"#ff0000","trigger":""}},"cf":{"id":"temp_sbdj3lav1lq","path":"Amostras#/CF_SEP/Generators","color":"#000000"}},"scope":"global","command":"game.betterTables.createTableFromCompendium(\"Sub Table Recipes Legendary\",\n    //\"dnd5e.items\",\n    \"innocenti-worlds.item-recipes\",\n    { weightPredicate: predicate }\n);\n\nfunction predicate(entity) {\n    //if(entity.type != \"loot\") return 0;\n    if(entity.data.data.consumableType != \"food\") return 0;\n    if(entity.data.data.rarity != \"Legendary\") return 0;\n    //if(entity.data.data.price != 1000) return 0;\n    /*\n    switch (entity.data.data.rarity) {\n        case \"Common\":\n            return 16;\n        case \"Uncommon\":\n            return 8;\n        case \"Rare\":\n            return 4;\n        case \"Very rare\":\n            return 2;\n        case \"Legendary\":\n            return 1;\n        default:\n            return 0;\n    }\n*/\n}","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"VeDcolwAyduiKkfa"}
{"_id":"X2HyWciPYCiAg8bt","name":"Journals Update ID to names","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"furnace":{"runAsGM":true},"cf":{"id":"temp_sbdj3lav1lq","path":"Amostras#/CF_SEP/Generators","color":"#000000"},"combat-utility-belt":{"macroTrigger":""}},"scope":"global","command":"game.journal.forEach(entry => {\n  if(entry.folder !== null && entry.folder.name !== \"UPDATE\") return;\n  if(entry.data.content == null) return;\n  let content = entry.data.content;\n  let matches = content.match(/@\\w*\\[([0-9A-Za-záàâãéèêíïóôõöúçñÁÀÂÃÉÈÍÏÓÔÕÖÚÇÑ.\\- ]+)\\]/g);\n  \n  // now we have an array of things such as @Actor[5c8HWfrpvRV4XtZ1]\n  if(matches == null) return;\n  let newcontent = content;\n  let uniqueMatches = matches\n    .filter((value, index, self) => self.indexOf(value) === index) //unique matches\n    .forEach(str => {\n      let arrayData = str.slice(1, -1).split('['); // cut off the @ and ] then make [0] the type and [1] the id.\n      // since the reference may not match directly with the game entity type, lets look that up.\n      //console.log(arrayData)\n      let entityType = getEntityType(arrayData[0]);\n      let packname;\n      if(entityType == 'packs'){\n       let pck =  arrayData[1].split('.');\n       packname = `${pck[0]}.${pck[1]}`;\n       arrayData[1] = pck[2];\n      }\n      let id = arrayData[1];\n      let name;\n      // with the id and our entity type, look up the name of the entry.\n      if(entityType == 'packs'){\n          let packs = game[entityType].get(packname);\n          let pindex = packs.index.find(element => element._id === id) || packs.index.find(element => element.name === id);\n          //console.log(packs);\n          if(!pindex)\n            return ui.notifications.error(`Could not find any record for the entity type ${entityType} in pack ${packs.name} with the id of ${id}`);\n          name = pindex.name;\n      }else{\n          name = game[entityType].get(id)?.name;\n      }\n      //console.log(name)\n      if (!name) {\n        return ui.notifications.error(`Could not find any record for the entity type ${entityType} with the id of ${arrayData[0]}`);\n      }\n\n      // replace the ID with the name.\n      console.log(`updating ${id} with ${name}`);\n\n      let regEx = new RegExp(id, 'g');\n      newcontent = newcontent.replace(regEx, name);\n      //console.log(newcontent)\n    }); \n  entry.update({ content: newcontent });\n});\n\nfunction getEntityType(entity) {\n  switch (entity) {\n    case 'JournalEntry': return 'journal';\n    case 'RollTable': return 'tables';\n    case 'Compendium': return 'packs';\n    default: return entity.toLowerCase() + 's';\n  }\n}","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[]}
{"_id":"XEvC1JPgWffipkFR","name":"Passive","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_xytjaezjpbo","path":"Automação#/CF_SEP/Automação Master","color":"#0080ff"}},"scope":"global","command":"//args[0] = dificult\n//args[1] = sucess\n//args[2] = fail\n//args[3] = flags\n//console.log(token.id,game.user.id,args);\n//console.log(args);\nlet checks = new Innocenti.PassiveCheck(game.user,token);\nchecks.Check(...args);","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[]}
{"_id":"XgR3hIQTTDaJKCH6","name":"Update Cite e Bio","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"furnace":{"runAsGM":false},"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"Update Cite e Bio","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"cf":{"id":"temp_sbdj3lav1lq","path":"Amostras#/CF_SEP/Generators","color":"#000000"}},"scope":"global","command":"const actorNames = game.actors.map(actor => actor.name).filter((value, index, self) => self.indexOf(value) === index);\nconst journalNames = game.journal.map(journal => journal.name).filter((value, index, self) => self.indexOf(value) === index);\n\nconst indexCite = {\n    Actor: actorNames,\n    JournalEntry: journalNames\n    }\n\ngame.actors.forEach(entry => {\n    //console.log(entry.entity)\n    let newcontent = entry.data.data.details.biography.value;\n    for(const [key, value] of Object.entries(indexCite)){\n        let entityType = key;\n        for (let i = 0; i < value.length; i++) {\n            if(value[i] != entry.name){\n            //let strName = escapeRegExp(value[i]);\n            let str = `(?!\\\\[)\\\\b${value[i]}\\\\b(?![\\\\w\\\\s]*[\\\\]\\\\}])`;\n            //console.log(str);\n            let regEx = new RegExp(str, 'g');\n            if(value[i] != entry.name){\n                //console.log(regEx);\n                newcontent = newcontent.replace(regEx, `@${entityType}[${value[i]}]{${value[i]}}`);\n            }else{\n               newcontent = newcontent.replace(regEx, `<strong>${value[i]}</strong>`); \n            }}\n        }\n        //console.log(newcontent);\n        entry.update({ 'data.details.biography.value': newcontent });\n    }\n    console.log(\"FIM\");\n});\nfunction escapeRegExp(string) {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[]}
{"name":"Create Tables By Rarity","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"Create Tables By Rarity ","colour":"#ff0000","trigger":""}},"cf":{"id":"temp_sbdj3lav1lq","path":"Amostras#/CF_SEP/Generators","color":"#000000"}},"scope":"global","command":"game.betterTables.createTableFromCompendium(\"Sub Table Recipes Legendary\",\n    //\"dnd5e.items\",\n    \"innocenti-worlds.item-recipes\",\n    { weightPredicate: predicate }\n);\n\nfunction predicate(entity) {\n    //if(entity.type != \"loot\") return 0;\n    if(entity.data.data.consumableType != \"food\") return 0;\n    if(entity.data.data.rarity != \"Legendary\") return 0;\n    //if(entity.data.data.price != 1000) return 0;\n    /*\n    switch (entity.data.data.rarity) {\n        case \"Common\":\n            return 16;\n        case \"Uncommon\":\n            return 8;\n        case \"Rare\":\n            return 4;\n        case \"Very rare\":\n            return 2;\n        case \"Legendary\":\n            return 1;\n        default:\n            return 0;\n    }\n*/\n}","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"Xi7MY6Z26J7nHQIk"}
{"name":"DAE VampBite","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true},"cf":{"id":"temp_1wixx6as5pj","path":"DAE","color":"#800000"}},"scope":"global","command":"//console.log(args);\nlet adamage = args[1];\nlet atarget = canvas.tokens.get(args[2]);\nlet itarget = canvas.tokens.get(args[3]);\n\nif (args[0] === \"on\") {\n    let max = atarget.actor.data.data.attributes.hp.max - (adamage);\n    ler recover = itarget.actor.data.data.attributes.hp.value + (adamage);\n    atarget.actor.update ({\n        \"data.attributes.hp.max\": max\n    });\n    itarget.actor.update ({\n        \"data.attributes.hp.value\": recover\n    });\n}\nif (args[0] === \"off\") {\n    let max = atarget.actor.data.data.attributes.hp.max + (adamage);\n    atarget.actor.update ({\n        \"data.attributes.hp.max\": max\n    });\n}","author":"X4uo406iXTm4HkVN","img":"systems/dnd5e/icons/skills/red_29.jpg","actorIds":[],"_id":"Xjd9FfJLJqZqJr73"}
{"_id":"Z5BXrqD9QrhaT6JX","name":"Fix Actors (change compendium links)","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"furnace":{"runAsGM":true},"cf":{"id":"temp_sbdj3lav1lq","path":"Amostras#/CF_SEP/Generators","color":"#000000"}},"scope":"global","command":"//TROCA OS LINKS DE COMPENDIUM PARA LINKS DO MUNDO.\r\n// COM ECXESSÃO DOS ITEMS QUE MANTÉM NO COMPENDIUM\r\ngame.actors.forEach(entry => {\r\n    let content = entry.data.data.details.biography.value;\r\n    let matches = content.match(/@\\w*\\[([0-9A-Za-záàâãéèêíïóôõöúçñÁÀÂÃÉÈÍÏÓÔÕÖÚÇÑ.\\- ]+)\\]?(\\{([0-9A-Za-záàâãéèêíïóôõöúçñÁÀÂÃÉÈÍÏÓÔÕÖÚÇÑ;&.\"()\\- ]+)\\})/g);\r\n\r\n    // now we have an array of things such as @Actor[5c8HWfrpvRV4XtZ1]\r\n    if (matches == null) return;\r\n    let newcontent = content;\r\n    let uniqueMatches = matches\r\n        .filter((value, index, self) => self.indexOf(value) === index) //unique matches\r\n        .forEach(str => {\r\n            let firstdata = str.slice(0, -1).split('{');\r\n            let pName = firstdata[1];\r\n            //console.log(firstdata);\r\n            let arrayData = firstdata[0].slice(1, -1).split('['); // cut off the @ and ] then make [0] the type and [1] the id.\r\n            // since the reference may not match directly with the game entity type, lets look that up.\r\n            //console.log(arrayData, pName)\r\n            if (arrayData[0] != 'Compendium') return;\r\n            let pck = arrayData[1].split('.');\r\n            let packname = `${pck[0]}.${pck[1]}`;\r\n            //console.log(packname);\r\n            let id = pck[2];\r\n            let entityType = getEntityType(arrayData[0]);\r\n            \r\n            // with the id and our entity type, look up the name of the entry.\r\n            let packs = game[entityType].get(packname);\r\n            \r\n            if(packs == null){ return console.log(`Não Existe Um compendium com o nome: ${packname} com o item ${entry.name}`)}\r\n            let newEntity = packs.entity;\r\n            //console.log(newEntity);\r\n            if (newEntity === 'Item') return;\r\n            let pindex = packs.index.find(element => element._id === id) || packs.index.find(element => element.name === pName);\r\n            \r\n            if (!pindex) {\r\n                //console.log(packs.index.find(element => element.name == pName), pName, newEntity, packname);\r\n                //return ui.notifications.error(`Could not find any record for the entity type ${entityType} in pack ${packs} with the id of ${id}`);\r\n            }\r\n            let name = (pindex) ? pindex.name : htmlDecode(pName);\r\n            //console.log(name);\r\n\r\n            if (!name) {\r\n                return ui.notifications.error(`Could not find any record for the entity type ${entityType} with the id of ${arrayData[0]}`);\r\n            }\r\n            let changeEntry = (name !== '') ? `@${packs.entity}[${name}]` : '';\r\n            //console.log(changeEntry);\r\n            let newstr = escapeRegExp(firstdata[0]);\r\n            console.log(`updating ${id} with ${name}`);\r\n            let regEx = new RegExp(newstr, 'g');\r\n            //console.log(regEx);\r\n            newcontent = newcontent.replace(regEx, changeEntry);\r\n            //console.log(newcontent);\r\n        });\r\n    entry.update({ 'data.details.biography.value': newcontent });\r\n});\r\nconsole.log(\"FIM\");\r\n\r\nfunction escapeRegExp(string) {\r\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\r\n}\r\nfunction getEntityType(entity) {\r\n    switch (entity) {\r\n        case 'JournalEntry': return 'journal';\r\n        case 'RollTable': return 'tables';\r\n        case 'Compendium': return 'packs';\r\n        default: return entity.toLowerCase() + 's';\r\n    }\r\n}\r\nfunction htmlDecode(input) {\r\n  var doc = new DOMParser().parseFromString(input, \"text/html\");\r\n  return doc.documentElement.textContent;\r\n}","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[]}
{"name":"Update Tokens Weapons MidiMacro","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.7KWn7kV8paHkY2XC"},"cf":{"id":"temp_7aunl0f645q","path":"Amostras","color":"#000000"}},"scope":"global","command":"let macroname = \"AutoRollTableCriticalHit\";\n\n(async () => {\n    canvas.tokens.placeables.map(a => {\n        if(!a.actor) return console.log(a.name)\n        a.actor.items.map(b => {\n            if (b.type === 'weapon' && (b.data.data.actionType === 'mwak' || b.data.data.actionType ==='rwak' || b.data.data.actionType ==='msak' || b.data.data.actionType ==='rsak')) {\n                console.log(b.name)\n                b.setFlag('midi-qol','onUseMacroName', macroname);\n            }\n        })\n    })\nconsole.log(\"Fim - Tokens On Map\")\n})();","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"ZpbsaNAlrSQEQNVi"}
{"_id":"bvGH5awEQaKTYYpa","name":"OpenDoor","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_xytjaezjpbo","path":"Automação#/CF_SEP/Automação Master","color":"#0080ff"}},"scope":"global","command":"//args[0] = dificult\n//args[1] = sucess\n//args[2] = fail\n//args[3] = key\n//args[4] = flags\n//console.log(token.id,game.user.id,args);\nconsole.log(args);\nlet checks = new Innocenti.OpenDoor(game.user.id,token.id);\nchecks.Check(...args);","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[]}
{"name":"Actions","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_xytjaezjpbo","path":"Automação#/CF_SEP/Automação Master","color":"#0080ff"}},"scope":"global","command":"//game.macros.entities.find(i => i.name === 'GMActions').execute(game.user.id,token.id,...args);\n\nlet checks = new Innocenti.Actions(game.user,token);\nchecks.Check(...args);","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"bz53IkdemuY4ovec"}
{"name":"Create Tables By Rarity","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"Create Tables By Rarity ","colour":"#ff0000","trigger":""}},"cf":{"id":"temp_sbdj3lav1lq","path":"Amostras#/CF_SEP/Generators","color":"#000000"}},"scope":"global","command":"game.betterTables.createTableFromCompendium(\"Sub Table Recipes Legendary\",\n    //\"dnd5e.items\",\n    \"innocenti-worlds.item-recipes\",\n    { weightPredicate: predicate }\n);\n\nfunction predicate(entity) {\n    //if(entity.type != \"loot\") return 0;\n    if(entity.data.data.consumableType != \"food\") return 0;\n    if(entity.data.data.rarity != \"Legendary\") return 0;\n    //if(entity.data.data.price != 1000) return 0;\n    /*\n    switch (entity.data.data.rarity) {\n        case \"Common\":\n            return 16;\n        case \"Uncommon\":\n            return 8;\n        case \"Rare\":\n            return 4;\n        case \"Very rare\":\n            return 2;\n        case \"Legendary\":\n            return 1;\n        default:\n            return 0;\n    }\n*/\n}","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"cALxeg5DPfUB4clw"}
{"name":"Invisibility","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true},"cf":{"id":"temp_1wixx6as5pj","path":"DAE","color":"#800000"}},"scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target\n\nlet target = canvas.tokens.get(args[1])\nif (args[0] === \"on\") {\n    ChatMessage.create({ content: `${target.name} turns invisible` });\n    target.update({ \"hidden\": true });\n}\nif (args[0] === \"off\") {\n    ChatMessage.create({ content: `${target.name} re-appears` });\n    target.update({ \"hidden\": false });\n}","author":"X4uo406iXTm4HkVN","img":"systems/dnd5e/icons/spells/fog-sky-2.jpg","actorIds":[],"_id":"cDRwSy2yGKb80zxO"}
{"name":"DAE Greapple","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_1wixx6as5pj","path":"DAE","color":"#800000"}},"scope":"global","command":"console.log(args);\n// \"DAE Greapple\" @token @target auto\nlet ttoken = canvas.tokens.get(args[1]);\nlet targets = canvas.tokens.get(args[2]);\nlet tactor = targets.actor;\nlet opt = args[args.length -1];\n\nif(args[0] === 'on' && (args[3] && args[3] !== opt)){\n    let skill = (tactor.data.data.skills.ath >= tactor.data.data.skills.acr) ? 'ath' : 'acr';\n    tactor.rollSkill('ath').then(async (result) => {\n        let res = await ttoken.actor.rollSkill(skill);\n        if (result.total >= res.total) {\n            game.cub.removeCondition(\"Grappled\", targets);\n        }\n    });\n}\n\nif (args[0] === \"each\") {\n    if(game.cub.hasCondition(\"Grappled\", tactor)){\n        let skill = (tactor.data.data.skills.ath >= tactor.data.data.skills.acr) ? 'ath' : 'acr';\n        tactor.rollSkill(skill).then(async (result) => {\n            if (result.total >= ttoken.actor.data.data.skills.ath.passive) {\n                game.cub.removeCondition(\"Grappled\", targets);\n                if(game.cub.hasCondition(\"Restrained\", tactor))\n                    game.cub.removeCondition(\"Restrained\", targets);\n                await targets.actor.deleteEmbeddedEntity(\"ActiveEffect\", opt.effectId);\n            }\n        });\n    }else{\n        await targets.actor.deleteEmbeddedEntity(\"ActiveEffect\", opt.effectId);\n    }\n}","author":"X4uo406iXTm4HkVN","img":"modules/combat-utility-belt/icons/grappled.svg","actorIds":[],"_id":"d2OuKcbeO0o53zhJ"}
{"name":"Create Tables By Rarity","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"Create Tables By Rarity ","colour":"#ff0000","trigger":""}},"cf":{"id":"temp_sbdj3lav1lq","path":"Amostras#/CF_SEP/Generators","color":"#000000"}},"scope":"global","command":"game.betterTables.createTableFromCompendium(\"Sub Table Recipes Legendary\",\n    //\"dnd5e.items\",\n    \"innocenti-worlds.item-recipes\",\n    { weightPredicate: predicate }\n);\n\nfunction predicate(entity) {\n    //if(entity.type != \"loot\") return 0;\n    if(entity.data.data.consumableType != \"food\") return 0;\n    if(entity.data.data.rarity != \"Legendary\") return 0;\n    //if(entity.data.data.price != 1000) return 0;\n    /*\n    switch (entity.data.data.rarity) {\n        case \"Common\":\n            return 16;\n        case \"Uncommon\":\n            return 8;\n        case \"Rare\":\n            return 4;\n        case \"Very rare\":\n            return 2;\n        case \"Legendary\":\n            return 1;\n        default:\n            return 0;\n    }\n*/\n}","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"dQYN6aBqKMtdevHZ"}
{"name":"RollTable: Acerto Crítico","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/d20-grey.svg","tooltip":"RollTable: Acerto Crítico","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_7iwojogai4y","path":"Roll Tables","color":"#008000"}},"scope":"global","command":"game.tables.getName(\"Acerto Crítico\").draw();","author":"X4uo406iXTm4HkVN","img":"icons/vtt-512.png","actorIds":[],"_id":"dVIg2aMei4YIKesf"}
{"name":"RollTable: Complications","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/d20-grey.svg","tooltip":"RollTable: Complications","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_7iwojogai4y","path":"Roll Tables","color":"#008000"}},"scope":"global","command":"game.tables.getName(\"Complications\").draw();","author":"X4uo406iXTm4HkVN","img":"systems/dnd5e/icons/skills/red_28.jpg","actorIds":[],"_id":"db2LTYvcj6MuF1Ij"}
{"name":"Create Tables By Rarity","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"Create Tables By Rarity ","colour":"#ff0000","trigger":""}},"cf":{"id":"temp_sbdj3lav1lq","path":"Amostras#/CF_SEP/Generators","color":"#000000"}},"scope":"global","command":"game.betterTables.createTableFromCompendium(\"Sub Table Recipes Legendary\",\n    //\"dnd5e.items\",\n    \"innocenti-worlds.item-recipes\",\n    { weightPredicate: predicate }\n);\n\nfunction predicate(entity) {\n    //if(entity.type != \"loot\") return 0;\n    if(entity.data.data.consumableType != \"food\") return 0;\n    if(entity.data.data.rarity != \"Legendary\") return 0;\n    //if(entity.data.data.price != 1000) return 0;\n    /*\n    switch (entity.data.data.rarity) {\n        case \"Common\":\n            return 16;\n        case \"Uncommon\":\n            return 8;\n        case \"Rare\":\n            return 4;\n        case \"Very rare\":\n            return 2;\n        case \"Legendary\":\n            return 1;\n        default:\n            return 0;\n    }\n*/\n}","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"fHzdgDQmGiAWbA1Z"}
{"name":"RollTable: Orientation","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/d20-grey.svg","tooltip":"RollTable: Orientation","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_7iwojogai4y","path":"Roll Tables","color":"#008000"}},"scope":"global","command":"game.tables.getName(\"Orientation\").draw();","author":"X4uo406iXTm4HkVN","img":"icons/tools/navigation/compass-brass-blue-red.webp","actorIds":[],"_id":"fIdXNkAGC392XMbO"}
{"name":"Create Tables By Rarity","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"Create Tables By Rarity ","colour":"#ff0000","trigger":""}},"cf":{"id":"temp_sbdj3lav1lq","path":"Amostras#/CF_SEP/Generators","color":"#000000"}},"scope":"global","command":"game.betterTables.createTableFromCompendium(\"Sub Table Recipes Legendary\",\n    //\"dnd5e.items\",\n    \"innocenti-worlds.item-recipes\",\n    { weightPredicate: predicate }\n);\n\nfunction predicate(entity) {\n    //if(entity.type != \"loot\") return 0;\n    if(entity.data.data.consumableType != \"food\") return 0;\n    if(entity.data.data.rarity != \"Legendary\") return 0;\n    //if(entity.data.data.price != 1000) return 0;\n    /*\n    switch (entity.data.data.rarity) {\n        case \"Common\":\n            return 16;\n        case \"Uncommon\":\n            return 8;\n        case \"Rare\":\n            return 4;\n        case \"Very rare\":\n            return 2;\n        case \"Legendary\":\n            return 1;\n        default:\n            return 0;\n    }\n*/\n}","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"gqXpNbmHQyhZjQeq"}
{"name":"Create Tables By Rarity","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"Create Tables By Rarity ","colour":"#ff0000","trigger":""}},"cf":{"id":"temp_sbdj3lav1lq","path":"Amostras#/CF_SEP/Generators","color":"#000000"}},"scope":"global","command":"game.betterTables.createTableFromCompendium(\"Sub Table Recipes Legendary\",\n    //\"dnd5e.items\",\n    \"innocenti-worlds.item-recipes\",\n    { weightPredicate: predicate }\n);\n\nfunction predicate(entity) {\n    //if(entity.type != \"loot\") return 0;\n    if(entity.data.data.consumableType != \"food\") return 0;\n    if(entity.data.data.rarity != \"Legendary\") return 0;\n    //if(entity.data.data.price != 1000) return 0;\n    /*\n    switch (entity.data.data.rarity) {\n        case \"Common\":\n            return 16;\n        case \"Uncommon\":\n            return 8;\n        case \"Rare\":\n            return 4;\n        case \"Very rare\":\n            return 2;\n        case \"Legendary\":\n            return 1;\n        default:\n            return 0;\n    }\n*/\n}","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"grBUYxNBPzaSjQA8"}
{"_id":"h1beztrJXLyORo7S","name":"Update Unlinked Tokens to Actors","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_7aunl0f645q","path":"Amostras","color":"#000000"}},"scope":"global","command":"(async () => {\n    let aName = \"Commoner\";\n    let tactor = game.actors.getName(aName);\n    let tokens = canvas.tokens.controlled;\n    for (var tok of canvas.tokens.controlled) {\n        tok.update({actorId: tactor._id})\n       console.log(tok)\n    }\n    \n})();","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[]}
{"_id":"igMa666GIn4yFj0Z","name":"Xp Awards","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_z93mlyejk7r","path":"Automação","color":"#0080c0"}},"scope":"global","command":"(function () {\n\tfunction award_xp(type, amount) {\n\t\tlet actors = game.actors.entities.filter(e => e.data.type === 'character' && e.hasPlayerOwner);\n\t\tlet isShared = type == \"shared\";\n\t\tconsole.log(type + ' ' + amount);\n\t\tif (Number.isInteger(amount) && actors.length > 0) {\n\t\t\tlet totalAmount = isShared ? amount : amount * actors.length;\n\t\t\tlet individualAmount = isShared ? Math.floor(amount / actors.length) : amount\n\n\t\t\tlet chatContent = `\n\t\t\t<h1><img src=\"icons/commodities/treasure/crown-gold-laurel-wreath.webp\" width=\"50px\" /> XP Awards</h1>\n\t\t\t<b>${totalAmount} Experience Awarded!</b>\n\t\t\t<br>${individualAmount} added to:\n\t\t\t`;\n\n\t\t\tactors.forEach(actor => {\n\t\t\t\tchatContent += `<br>${actor.name}`;\n\t\t\t\tactor.update({\n\t\t\t\t\t\"data.details.xp.value\": actor.data.data.details.xp.value + individualAmount\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tlet chatData = {\n\t\t\t\tuser: game.user._id,\n\t\t\t\tspeaker: ChatMessage.getSpeaker(),\n\t\t\t\tcontent: chatContent,\n\t\t\t\ttype: CONST.CHAT_MESSAGE_TYPES.OTHER\n\t\t\t};\n\t\t\tChatMessage.create(chatData);\n\t\t}\n\t}\n\n\tnew Dialog({\n\t\ttitle: \"Award Party XP\",\n\t\tcontent: `\n\t <p>Select a type and an amount. Individual xp will give or take a set amount to/from each party member, whereas shared will split an amount evenly.</p>\n\t <form>\n\t  <div class=\"form-group\">\n\t   <label>Type:</label>\n\t   <select id=\"xp-type\">\n\t\t<option value=\"individual\">individual</option>\n\t\t<option value=\"shared\">shared</option>\n\t   </select>\n\t  </div>\n\t  <div class=\"form-group\">\n\t   <label>Amount</label>\n\t   <input type=\"text\" inputmode=\"numeric\" pattern=\"\\d*\" id=\"xp-amount\">\n\t  </div>\n\t </form>\n\t `,\n\t\tbuttons: {\n\t\t\tone: {\n\t\t\t\ticon: '<i class=\"fas fa-check\"></i>',\n\t\t\t\tlabel: \"Confirm\",\n\t\t\t\tcallback: (html) => {\n\t\t\t\t\tlet type = html.find('[id=xp-type]')[0].value;\n\t\t\t\t\tlet amount = parseInt(html.find('[id=xp-amount]')[0].value);\n\t\t\t\t\taward_xp(type, amount);\n\t\t\t\t}\n\t\t\t},\n\t\t\ttwo: {\n\t\t\t\ticon: '<i class=\"fas fa-times\"></i>',\n\t\t\t\tlabel: \"Cancel\",\n\t\t\t}\n\t\t},\n\t\tdefault: \"Cancel\"\n\t}).render(true);\n})();","author":"X4uo406iXTm4HkVN","img":"icons/commodities/treasure/crown-gold-laurel-wreath.webp","actorIds":[]}
{"_id":"izxM1rhpNRx0rz2M","name":"Give Money","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_z93mlyejk7r","path":"Automação","color":"#0080c0"}},"scope":"global","command":"//Money Give/Remover\n\n(() => {\n\tlet targets = game.user.targets;\n\n\tlet targets_content = ``;\n\n\tfor (let target of targets) {\n\t\ttargets_content += `<img src=${target.data.img} width=\"50\" height=\"50\">`\n\t}\n\n\tlet dialog_content = `\n\t<div class = \"form-group\">\n\t\t<h1><img src=\"icons/commodities/currency/coins-plain-stack-gold.webp\" width=\"50px\" /> Golden Share</h1>\n\t\t<table style=\"width: 100%; text-align:center; border: 1px solid black\">\n\t\t  <tr>\n\t\t\t<thcolspan=\"2\">${targets_content}</th>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td><label for=\"pp\">Platnium<label></td>\n\t\t\t<td><input name=\"pp\" type =\"number\" value=\"0\" min=\"-999\" max=\"999\"></td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td><label for=\"gp\">Gold    <label></td>\n\t\t\t<td><input name=\"gp\" type =\"number\" value=\"0\" min=\"-999\" max=\"999\"></td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td><label for=\"ep\">Electrum<label></td>\n\t\t\t<td><input name=\"ep\" type =\"number\" value=\"0\" min=\"-999\" max=\"999\"></td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td><label for=\"sp\">Silver  <label></td>\n\t\t\t<td><input name=\"sp\" type =\"number\" value=\"0\" min=\"-999\" max=\"999\"></td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td><label for=\"cp\">Copper  <label></td>\n\t\t\t<td><input name=\"cp\" type =\"number\" value=\"0\" min=\"-999\" max=\"999\"></td>\n\t\t  </tr>\n\t\t</table>\n\t</div>`;\n\n\tnew Dialog({\n\t\tcontent: dialog_content,\n\t\tbuttons:\n\t\t{\n\t\t\tOk: { icon: ``, label: `Change Money.`, callback: (html) => changeMoney(targets, html) }\n\t\t}\n\t}).render(true);\n})();\n\nasync function changeMoney(targets, html) {\n\tlet difference_money = {\n\t\tpp: parseInt(html.find('[name=pp]')[0].value),\n\t\tgp: parseInt(html.find('[name=gp]')[0].value),\n\t\tep: parseInt(html.find('[name=ep]')[0].value),\n\t\tsp: parseInt(html.find('[name=sp]')[0].value),\n\t\tcp: parseInt(html.find('[name=cp]')[0].value)\n\t}\n\n\t//divide update_money based on # of targets\n\tdifference_money = divideValue(difference_money, targets.size);\n\n\t//get rid of \"extra\" stuff, display all names in header\n\tlet actor_content = ``;\n\tfor (let target of targets) { actor_content += `${target.actor.name}, `; }\n\n\tlet table_content = ``;\n\tfor (let key in difference_money) {\n\t\tif (difference_money[key] !== 0)\n\t\t\ttable_content += `<tr><td>${key} :</td><td>${difference_money[key]}</td></tr>`\n\t}\n\n\tlet content = `\n\t<h2><img src=\"icons/commodities/currency/coins-plain-stack-gold.webp\" width=\"50px\" /> Add Money</h2>\n\t<table style \"width: 100%; text-align:center; border: 1px solid black\">\n\t\t<tr>\n\t\t  <th colspan=\"2\">Money Change :</th>\n\t\t</tr>\n\t\t<tr>\n\t\t  <th colspan=\"2\">${actor_content}</th>\n\t\t</tr>\n\t\t${table_content}\n\t</table>`;\n\n\tfor (let target of targets) {\n\t\tlet original_money = duplicate(target.actor.data.data.currency);\n\t\tlet update_money = changeValue(original_money, difference_money);\n\n\t\tawait target.actor.update({ \"data.currency\": update_money });\n\t}\n\n\tChatMessage.create({ content, speaker: ChatMessage._getSpeakerFromUser({ user: game.user }) })\n}\n\nfunction changeValue(Original, Difference) {\n\tlet Update = { pp: 0, gp: 0, ep: 0, sp: 0, cp: 0 };\n\n\tfor (let key in Original) {\n\t\tUpdate[key] = Original[key] + Difference[key];\n\t\tif (Update[key] < 0) {\n\t\t\tswitch (key) {\n\t\t\t\tcase \"cp\":\n\t\t\t\t\tif (Update[\"sp\"] > 0) {\n\t\t\t\t\t\tUpdate[\"cp\"] += 10;\n\t\t\t\t\t\tUpdate[\"sp\"] -= 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (Update[\"ep\"] > 0) {\n\t\t\t\t\t\tUpdate[\"cp\"] += 50;\n\t\t\t\t\t\tUpdate[\"ep\"] -= 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (Update[\"gp\"] > 0) {\n\t\t\t\t\t\tUpdate[\"cp\"] += 100;\n\t\t\t\t\t\tUpdate[\"gp\"] -= 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (Update[\"pp\"] > 0) {\n\t\t\t\t\t\tUpdate[\"cp\"] += 1000;\n\t\t\t\t\t\tUpdate[\"pp\"] -= 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(`Not enough money to do that.`);\n\t\t\t\t\t}\n\t\t\t\t\tUpdate = changeValue(Update, { pp: 0, gp: 0, ep: 0, sp: 0, cp: 0 });\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"sp\":\n\t\t\t\t\tif (Update[\"ep\"] > 0) {\n\t\t\t\t\t\tUpdate[\"sp\"] += 5;\n\t\t\t\t\t\tUpdate[\"ep\"] -= 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (Update[\"gp\"] > 0) {\n\t\t\t\t\t\tUpdate[\"sp\"] += 10;\n\t\t\t\t\t\tUpdate[\"gp\"] -= 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (Update[\"pp\"] > 0) {\n\t\t\t\t\t\tUpdate[\"sp\"] += 100;\n\t\t\t\t\t\tUpdate[\"pp\"] -= 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (Update[\"cp\"] > 9) {\n\t\t\t\t\t\tUpdate[\"sp\"] += 1;\n\t\t\t\t\t\tUpdate[\"cp\"] -= 10;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(`Not enough money to do that.`);\n\t\t\t\t\t}\n\t\t\t\t\tUpdate = changeValue(Update, { pp: 0, gp: 0, ep: 0, sp: 0, cp: 0 });\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ep\":\n\t\t\t\t\tif (Update[\"gp\"] > 0) {\n\t\t\t\t\t\tUpdate[\"ep\"] += 2;\n\t\t\t\t\t\tUpdate[\"gp\"] -= 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (Update[\"pp\"] > 0) {\n\t\t\t\t\t\tUpdate[\"ep\"] += 20;\n\t\t\t\t\t\tUpdate[\"pp\"] -= 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (Update[\"sp\"] > 4) {\n\t\t\t\t\t\tUpdate[\"ep\"] += 1;\n\t\t\t\t\t\tUpdate[\"sp\"] -= 5;\n\t\t\t\t\t}\n\t\t\t\t\telse if (Update[\"cp\"] > 49) {\n\t\t\t\t\t\tUpdate[\"ep\"] += 1;\n\t\t\t\t\t\tUpdate[\"cp\"] -= 50;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(`Not enough money to do that.`);\n\t\t\t\t\t}\n\t\t\t\t\tUpdate = changeValue(Update, { pp: 0, gp: 0, ep: 0, sp: 0, cp: 0 });\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"gp\":\n\t\t\t\t\tif (Update[\"pp\"] > 0) {\n\t\t\t\t\t\tUpdate[\"gp\"] += 10;\n\t\t\t\t\t\tUpdate[\"pp\"] -= 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (Update[\"ep\"] > 1) {\n\t\t\t\t\t\tUpdate[\"gp\"] += 1;\n\t\t\t\t\t\tUpdate[\"ep\"] -= 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if (Update[\"sp\"] > 9) {\n\t\t\t\t\t\tUpdate[\"gp\"] += 1;\n\t\t\t\t\t\tUpdate[\"sp\"] -= 10;\n\t\t\t\t\t}\n\t\t\t\t\telse if (Update[\"cp\"] > 99) {\n\t\t\t\t\t\tUpdate[\"gp\"] += 1;\n\t\t\t\t\t\tUpdate[\"cp\"] -= 100;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(`Not enough money to do that.`);\n\t\t\t\t\t}\n\t\t\t\t\tUpdate = changeValue(Update, { pp: 0, gp: 0, ep: 0, sp: 0, cp: 0 });\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"pp\":\n\t\t\t\t\tif (Update[\"gp\"] > 9) {\n\t\t\t\t\t\tUpdate[\"pp\"] += 1;\n\t\t\t\t\t\tUpdate[\"gp\"] -= 10;\n\t\t\t\t\t}\n\t\t\t\t\telse if (Update[\"ep\"] > 19) {\n\t\t\t\t\t\tUpdate[\"pp\"] += 1;\n\t\t\t\t\t\tUpdate[\"ep\"] -= 20;\n\t\t\t\t\t}\n\t\t\t\t\telse if (Update[\"sp\"] > 99) {\n\t\t\t\t\t\tUpdate[\"pp\"] += 1;\n\t\t\t\t\t\tUpdate[\"sp\"] -= 100;\n\t\t\t\t\t}\n\t\t\t\t\telse if (Update[\"cp\"] > 999) {\n\t\t\t\t\t\tUpdate[\"pp\"] += 1;\n\t\t\t\t\t\tUpdate[\"cp\"] -= 1000;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(`Not enough money to do that.`);\n\t\t\t\t\t}\n\t\t\t\t\tUpdate = changeValue(Update, { pp: 0, gp: 0, ep: 0, sp: 0, cp: 0 });\n\t\t\t}\n\t\t}\n\t}\n\treturn Update;\n}\n\nfunction divideValue(Object, Value) {\n\tif (Value === 1) return Object;\n\tlet remainder = 0;\n\tlet Update = { pp: 0, gp: 0, ep: 0, sp: 0, cp: 0, remainder: 0 };\n\n\tfor (let key in Object) {\n\t\tUpdate[key] = Object[key] + remainder;\n\t\tremainder = Object[key] % Value;\n\t\tif (Update[key] > 0) Update[key] = Math.floor(Update[key] / Value);\n\t\tif (Update[key] < 0) Update[key] = Math.ceil(Update[key] / Value);\n\t\tif (remainder !== 0) {\n\t\t\tif (key === \"ep\") { remainder *= 5; }\n\t\t\telse if (key === \"gp\") { remainder *= 2; }\n\t\t\telse { remainder *= 10; }\n\t\t}\n\t}\n\tUpdate.remainder = remainder / 10;\n\treturn Update;\n}","author":"X4uo406iXTm4HkVN","img":"icons/commodities/currency/coins-plain-stack-gold.webp","actorIds":[]}
{"name":"#[CF_tempEntity]","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"chat","flags":{"cf":{"id":"temp_sbdj3lav1lq","path":"Amostras#/CF_SEP/Generators","color":"#000000","name":"Generators","children":["zEmgoW3OxNn1GY29","4pVv84MZ9cYoW2L4","Z5BXrqD9QrhaT6JX","AJEdfaiVTADKChfp","X2HyWciPYCiAg8bt","7fY21QBZlrZYAcen","XgR3hIQTTDaJKCH6","tYxXutKKriL2hWEH","z1QWSVv9Xzk5TLFm","cALxeg5DPfUB4clw","ASRHIwjmQVqSV6Zs","NGtZxAXak28GqWec","VeDcolwAyduiKkfa","Gqrrdc0ZZCjbZ7G5","fHzdgDQmGiAWbA1Z","Xi7MY6Z26J7nHQIk","gqXpNbmHQyhZjQeq","dQYN6aBqKMtdevHZ","BZYN0yruprt6mYbI","PHfUZAcLejrXpyJ9","grBUYxNBPzaSjQA8","oZjBvZ69djZMXkhp","HVBuRNwDkw0Cst41"],"folderPath":["temp_7aunl0f645q"]}},"scope":"global","command":"","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"kAI8XRRAFpCzhHkh"}
{"_id":"kHMD7PRbuwjnhtDw","name":"SeeID","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_7aunl0f645q","path":"Amostras","color":"#000000"}},"scope":"global","command":"//Display Name & IDs\r\nfor(let token of canvas.tokens.controlled)\r\n{\r\n    ChatMessage.create({\r\n        content : token.name + \" \" + token.id\r\n    });\r\n}\r\n\r\nfor(let wall of canvas.walls.controlled)\r\n{\r\n    ChatMessage.create({\r\n        content : wall.name + \" \" + wall.id\r\n    })\r\n}\r\n/*\r\nfor(let light of canvas.lighting.activate)\r\n{\r\n    ChatMessage.create({\r\n        content : light.name + \" \" + light.id\r\n    })\r\n}\r\nfor (let note of canvas.notes.placeables)\r\n{\r\n    ChatMessage.create({\r\n        content :  note.name + \" \" + note.id\r\n     });\r\n}\r\n*/\r\nfor (let draw of canvas.drawings.controlled)\r\n{\r\n   ChatMessage.create({\r\n      content :  draw.name + \" \" + draw.id\r\n   });\r\n}\r\n\r\nfor (let tile of canvas.tiles.controlled)\r\n{\r\n    ChatMessage.create({\r\n        content :  tile.name + \" \" + tile.id\r\n     });\r\n}","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[]}
{"name":"DAE Life Drain","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true},"cf":{"id":"temp_1wixx6as5pj","path":"DAE","color":"#800000"}},"scope":"global","command":"console.log(args);\nlet adamage = args[1];\nlet atarget = canvas.tokens.get(args[2]);\n\nif (args[0] === \"on\") {\n    let max = atarget.actor.data.data.attributes.hp.max - (adamage);\n    console.log(\"Drena\", max);\n    atarget.actor.update ({\n        \"data.attributes.hp.max\": max\n    });\n}\nif (args[0] === \"off\") {\n    let max = atarget.actor.data.data.attributes.hp.max + (adamage);\n    atarget.actor.update ({\n        \"data.attributes.hp.max\": max\n    });\n}","author":"X4uo406iXTm4HkVN","img":"systems/dnd5e/icons/skills/violet_28.jpg","actorIds":[],"_id":"nEl7iFhyJaHR8JvV"}
{"name":"Update Tokens Weapons MidiMacro","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.7KWn7kV8paHkY2XC"},"cf":{"id":"temp_7aunl0f645q","path":"Amostras","color":"#000000"}},"scope":"global","command":"let macroname = \"AutoRollTableCriticalHit\";\n\n(async () => {\n    canvas.tokens.placeables.map(a => {\n        if(!a.actor) return console.log(a.name)\n        a.actor.items.map(b => {\n            if (b.type === 'weapon' && (b.data.data.actionType === 'mwak' || b.data.data.actionType ==='rwak' || b.data.data.actionType ==='msak' || b.data.data.actionType ==='rsak')) {\n                console.log(b.name)\n                b.setFlag('midi-qol','onUseMacroName', macroname);\n            }\n        })\n    })\nconsole.log(\"Fim - Tokens On Map\")\n})();","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"nFv8EiEhu4WleWFH"}
{"name":"RollTable: Erro Crítico","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/d20-grey.svg","tooltip":"RollTable: Erro Critico","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_7iwojogai4y","path":"Roll Tables","color":"#008000"}},"scope":"global","command":"game.tables.getName(\"Erro Crítico\").draw();","author":"X4uo406iXTm4HkVN","img":"icons/svg/d20-black.svg","actorIds":[],"_id":"nOQ96NaqgJc7lYdg"}
{"_id":"oZjBvZ69djZMXkhp","name":"Edit Biografy in Compendium","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_sbdj3lav1lq","path":"Amostras#/CF_SEP/Generators","color":"#000000"}},"scope":"global","command":"let packname = \"innocenti-worlds.npcs\";\r\nlet pack = game.packs.get(packname);\r\nlet cpack = await pack.getContent();\r\ngame.actors.forEach(entry => {\r\nlet bio = entry.data.data.details.biography;\r\nlet matches = bio.value.replace(/mod-my-world/g, 'innocenti-worlds');\r\n//console.log(matches );\r\nentry.update({ 'data.details.biography.value' : matches }); \r\n})\r\nconsole.log(\"FIM\");","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[]}
{"name":"DAECenterToken","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true},"cf":{"id":"temp_1wixx6as5pj","path":"DAE","color":"#800000"}},"scope":"global","command":"//@token @target\nlet atoken = canvas.tokens.get(args[1]);\nlet atarget = canvas.tokens.get(args[2]);\nif(args[0] === 'on'){\n    atarget.update({x: atoken.center.x, y: atoken.center.y});\n}","author":"X4uo406iXTm4HkVN","img":"systems/dnd5e/icons/skills/yellow_34.jpg","actorIds":[],"_id":"oazlmnKwPTeCsAKG"}
{"_id":"p5rhvs3U8SOVdkq9","name":"UpdateTempHP","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true},"cf":{"id":"temp_xytjaezjpbo","path":"Automação#/CF_SEP/Automação Master","color":"#0080ff"}},"scope":"global","command":"let target = canvas.tokens.get(args[1]);\nif (!target) {\n  ChatMessage.create({content: `Token ${args[1]} is no longer in scene`, whisper: ChatMessage.getWhisperIDs(\"GM\")})\n  return;\n}\nlet increment = args[2];\nlet temphpMax = (target.actor.data.data.attributes.hp.tempmax < increment)? increment:target.actor.data.data.attributes.hp.tempmax;\nlet temphp = (target.actor.data.data.attributes.hp.tempmax < increment)? increment:target.actor.data.data.attributes.hp.temp;\n\nif (args[0] === \"on\") {\n  target.actor.update({\"data.attributes.hp.tempmax\": temphpMax, \"data.attributes.hp.temp\": temphp})\nChatMessage.create({content: `Meal: ${target.name} received ${increment} HP temp`})\n} else {\n  target.actor.update({\"data.attributes.hp.tempmax\": 0, \"data.attributes.hp.temp\": 0})\nChatMessage.create({content: `Meal Expiry: ${target.name} Temp HP reduced by 0`})\n}","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[]}
{"_id":"pIj4meAewX6hxUZY","name":"Visitar","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"macro-marker":{"activeData":{"icon":"icons/svg/hanging-sign.svg","tooltip":"Visitar","colour":"#80ff80","trigger":""}},"cf":{"id":"temp_z93mlyejk7r","path":"Automação","color":"#0080c0"}},"scope":"global","command":"let visitar = InnocentiVisitar.Visitar();","author":"X4uo406iXTm4HkVN","img":"icons/environment/settlement/house-farmland-small.webp","actorIds":[]}
{"name":"GiveItemToken","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true},"cf":{"id":"temp_xytjaezjpbo","path":"Automação#/CF_SEP/Automação Master","color":"#0080ff"}},"scope":"global","command":"(async () => {\n    let aName = \"Gold 2d10 (gp)\";\n    \n    let item = game.items.getName(aName);\n    for (var tok of canvas.tokens.controlled) {\n        await tok.actor.createEmbeddedEntity(\"OwnedItem\", item, { noHook: true });\n       console.log(tok)\n    }\n    \n})();","author":"X4uo406iXTm4HkVN","img":"icons/svg/chest.svg","actorIds":[],"_id":"psPjryIk2muJnsZl"}
{"name":"Update Tokens Weapons MidiMacro","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.7KWn7kV8paHkY2XC"},"cf":{"id":"temp_7aunl0f645q","path":"Amostras","color":"#000000"}},"scope":"global","command":"let macroname = \"AutoRollTableCriticalHit\";\n\n(async () => {\n    canvas.tokens.placeables.map(a => {\n        if(!a.actor) return console.log(a.name)\n        a.actor.items.map(b => {\n            if (b.type === 'weapon' && (b.data.data.actionType === 'mwak' || b.data.data.actionType ==='rwak' || b.data.data.actionType ==='msak' || b.data.data.actionType ==='rsak')) {\n                console.log(b.name)\n                b.setFlag('midi-qol','onUseMacroName', macroname);\n            }\n        })\n    })\nconsole.log(\"Fim - Tokens On Map\")\n})();","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"qeF2sAPI5NJGd6k9"}
{"name":"Update Tokens Weapons MidiMacro","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.7KWn7kV8paHkY2XC"},"cf":{"id":"temp_7aunl0f645q","path":"Amostras","color":"#000000"}},"scope":"global","command":"let macroname = \"AutoRollTableCriticalHit\";\n\n(async () => {\n    canvas.tokens.placeables.map(a => {\n        if(!a.actor) return console.log(a.name)\n        a.actor.items.map(b => {\n            if (b.type === 'weapon' && (b.data.data.actionType === 'mwak' || b.data.data.actionType ==='rwak' || b.data.data.actionType ==='msak' || b.data.data.actionType ==='rsak')) {\n                console.log(b.name)\n                b.setFlag('midi-qol','onUseMacroName', macroname);\n            }\n        })\n    })\nconsole.log(\"Fim - Tokens On Map\")\n})();","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"s8RzRR4MCgzDwJ1b"}
{"_id":"tYxXutKKriL2hWEH","name":"Update tokens to Actor","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_sbdj3lav1lq","path":"Amostras#/CF_SEP/Generators","color":"#000000"}},"scope":"global","command":"(async () => {\n  let updates = canvas.scene.data.tokens.map(t => {\n    let tactor = game.actors.entities.find(a => a.name === t.name);\n        if (tactor) {\n            return {\n                _id: t._id,\n                actorId: tactor.id\n            }\n        } else {\n            console.log(t.name);\n            return {\n                _id: t._id,\n                actorId: \"\"\n            }\n        }\n  });\n  await canvas.scene.updateEmbeddedEntity(\"Token\", updates);\n})();","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[]}
{"name":"#[CF_tempEntity]","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"chat","flags":{"cf":{"id":"temp_z93mlyejk7r","path":"Automação","color":"#0080c0","name":"Automação","children":["izxM1rhpNRx0rz2M","BY8gK3jZ7RMP9F8C","pIj4meAewX6hxUZY","igMa666GIn4yFj0Z","ImFM8f56WRbXGwDY","1uvfVdTSJskYZ9FP","C5nkh6I6T91y2zO4"],"folderPath":[]}},"scope":"global","command":"","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"tianruZRrSlZe4mP"}
{"_id":"uDh4NNBBgYTnM8ue","name":"Checks","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_xytjaezjpbo","path":"Automação#/CF_SEP/Automação Master","color":"#0080ff"}},"scope":"global","command":"//args[0] = skill\n//args[1] = dificult\n//args[2] = sucess\n//args[3] = fail\n//args[4] = flags\n//console.log(token.id,game.user.id,args);\nconsole.log(args);\nlet checks = new Innocenti.Checks(game.user,token);\nchecks.Check(...args);","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[]}
{"name":"RepeatTest","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true},"cf":{"id":"temp_1wixx6as5pj","path":"DAE","color":"#800000"}},"scope":"global","command":"//console.log(\"ENTRA\", args);\n// \"RepeatTest\" str dc condition @token @target\nlet ttoken = canvas.tokens.get(args[4]);\nlet atargets = canvas.tokens.get(args[5]);\nlet tactor = atargets.actor;\nlet dc = args[2];\nlet skill = args[1];\nlet cond = args[3];\nlet lastArg = args[args.length-1];\nlet effectId = lastArg.effectId;\nif (args[0] === \"each\") {\n    if (Object.entries(game.dnd5e.config.skills).map(a => a[0]).includes(skill)){\n        tactor.rollSkill(skill).then((result) => {\n            if (result.total >= dc) {\n                atargets.actor.deleteEmbeddedEntity(\"ActiveEffect\", effectId);\n            }\n        });\n    }else if (Object.entries(game.dnd5e.config.abilities).map(a => a[0]).includes(skill)){\n        tactor.rollAbilityTest(skill).then((result) => {\n            if (result.total >= dc) {\n                atargets.actor.deleteEmbeddedEntity(\"ActiveEffect\", effectId);\n            }\n        });\n    }\n    \n}","author":"X4uo406iXTm4HkVN","img":"systems/dnd5e/icons/skills/blue_01.jpg","actorIds":[],"_id":"vJNB3G0cC8LVBbgx"}
{"name":"EnlargeReduce","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.tKKbvoCkf5A37rsc"},"cf":{"id":"temp_1wixx6as5pj","path":"DAE","color":"#800000"}},"scope":"global","command":"//DAE Macro Execute, Effect Value = \"Macro Name\" @target \n\n/**\n * For each target, the GM will have to choose \n */\nlet target = canvas.tokens.get(args[1]);\nlet originalSize = target.data.width;\nlet mwak = target.actor.data.data.bonuses.mwak.damage;\n\nif (args[0] === \"on\") {\n    new Dialog({\n        title: \"Enlarge or Reduce\",\n        buttons: {\n            one: {\n                label: \"Enlarge\",\n                callback: () => {\n                    let bonus = mwak + \" 1d4\";\n                    let enlarge = (originalSize + 1);\n                    target.actor.update({ \"data.bonuses.mwak.damage\": bonus });\n                    target.update({ \"width\": enlarge, \"height\": enlarge });\n                    target.actor.setFlag('world', 'enlageReduceSpell', {\n                        size: originalSize,\n                        ogMwak: mwak,\n                    });\n                    ChatMessage.create({ content: target.name + \" is enlarged\" });\n                }\n            },\n            two: {\n                label: \"Reduce\",\n                callback: () => {\n                    let bonus = mwak + \" -1d4\";\n                    let size = originalSize;\n                    let newSize = (size > 1) ? (size - 1) : (size - 0.3);\n                    target.actor.update({ \"data.bonuses.mwak.damage\": bonus });\n                    target.update({ \"width\": newSize, \"height\": newSize });\n                    target.actor.setFlag('world', 'enlageReduceSpell', {\n                        size: originalSize,\n                        ogMwak: mwak,\n                    });\n                    ChatMessage.create({ content: target.name + \" is reduced\" });\n                }\n            },\n        }\n    }).render(true);\n}\nif (args[0] === \"off\") {\n    let flag = target.actor.getFlag('world', 'enlageReduceSpell');\n    target.actor.update({ \"data.bonuses.mwak.damage\": flag.ogMwak });\n    target.update({ \"width\": flag.size, \"height\": flag.size });\n    target.actor.unsetFlag('world', 'enlageReduceSpell');\n    ChatMessage.create({ content: target.name + \" is returned to normal size\" });\n}","author":"X4uo406iXTm4HkVN","img":"systems/dnd5e/icons/spells/link-blue-2.jpg","actorIds":[],"_id":"w2bLSRS0326v45pk"}
{"_id":"xWAMSzx0NFmHhXqI","name":"PoolFlags","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true},"cf":{"id":"temp_xytjaezjpbo","path":"Automação#/CF_SEP/Automação Master","color":"#0080ff"}},"scope":"global","command":"//console.log(token.id);\n//console.log(args)\nlet pool = new Innocenti.PoolFlags(token.id, ...args);\nif(event == 'leave') pool.remove = true;\npool.AddPool();\npool.RemovePool();","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[]}
{"name":"Create Tables By Rarity","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"Create Tables By Rarity ","colour":"#ff0000","trigger":""}},"cf":{"id":"temp_sbdj3lav1lq","path":"Amostras#/CF_SEP/Generators","color":"#000000"}},"scope":"global","command":"game.betterTables.createTableFromCompendium(\"Sub Table Recipes Legendary\",\n    //\"dnd5e.items\",\n    \"innocenti-worlds.item-recipes\",\n    { weightPredicate: predicate }\n);\n\nfunction predicate(entity) {\n    //if(entity.type != \"loot\") return 0;\n    if(entity.data.data.consumableType != \"food\") return 0;\n    if(entity.data.data.rarity != \"Legendary\") return 0;\n    //if(entity.data.data.price != 1000) return 0;\n    /*\n    switch (entity.data.data.rarity) {\n        case \"Common\":\n            return 16;\n        case \"Uncommon\":\n            return 8;\n        case \"Rare\":\n            return 4;\n        case \"Very rare\":\n            return 2;\n        case \"Legendary\":\n            return 1;\n        default:\n            return 0;\n    }\n*/\n}","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"z1QWSVv9Xzk5TLFm"}
{"_id":"zEmgoW3OxNn1GY29","name":"Actor Update ID to names","permission":{"default":0,"X4uo406iXTm4HkVN":3},"type":"script","flags":{"furnace":{"runAsGM":true},"combat-utility-belt":{"macroTrigger":""},"cf":{"id":"temp_sbdj3lav1lq","path":"Amostras#/CF_SEP/Generators","color":"#000000"}},"scope":"global","command":"game.journal.forEach(entry => {\n  let content = entry.data.content;\n  if(entry.folder !== null && entry.folder.name !== \"UPDATE\") return;\n  let matches = content.match(/@\\w*\\[([0-9A-Za-záàâãéèêíïóôõöúçñÁÀÂÃÉÈÍÏÓÔÕÖÚÇÑ.\\- ]+)\\]/g);\n  \n  // now we have an array of things such as @Actor[5c8HWfrpvRV4XtZ1]\n  if(matches == null) return;\n  let newcontent = content;\n  let uniqueMatches = matches\n    .filter((value, index, self) => self.indexOf(value) === index) //unique matches\n    .forEach(str => {\n      let arrayData = str.slice(1, -1).split('['); // cut off the @ and ] then make [0] the type and [1] the id.\n      // since the reference may not match directly with the game entity type, lets look that up.\n      //console.log(arrayData)\n      let entityType = getEntityType(arrayData[0]);\n      let packname;\n      if(entityType == 'packs'){\n       let pck =  arrayData[1].split('.');\n       packname = `${pck[0]}.${pck[1]}`;\n       arrayData[1] = pck[2];\n      }\n      let id = arrayData[1];\n      let name;\n      // with the id and our entity type, look up the name of the entry.\n      if(entityType == 'packs'){\n          let packs = game[entityType].get(packname);\n          let pindex = packs.index.find(element => element._id === id) || packs.index.find(element => element.name === id);\n          //console.log(packs);\n          if(!pindex)\n            return ui.notifications.error(`Could not find any record for the entity type ${entityType} in pack ${packs.name} with the id of ${id}`);\n          name = pindex.name;\n      }else{\n          name = game[entityType].get(id)?.name;\n      }\n      //console.log(name)\n      if (!name) {\n        return ui.notifications.error(`Could not find any record for the entity type ${entityType} with the id of ${arrayData[0]}`);\n      }\n\n      // replace the ID with the name.\n      console.log(`updating ${id} with ${name}`);\n\n      let regEx = new RegExp(id, 'g');\n      newcontent = newcontent.replace(regEx, name);\n      //console.log(newcontent)\n    }); \n  entry.update({ content: newcontent });\n});\n\nfunction getEntityType(entity) {\n  switch (entity) {\n    case 'JournalEntry': return 'journal';\n    case 'RollTable': return 'tables';\n    case 'Compendium': return 'packs';\n    default: return entity.toLowerCase() + 's';\n  }\n}","author":"X4uo406iXTm4HkVN","img":"icons/svg/dice-target.svg","actorIds":[]}
