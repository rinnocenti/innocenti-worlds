{"_id":"0bImZ3m8zjOD6L3z","name":"Shocking Grasp","type":"script","author":"DPSwXpPVU8d93GBw","img":"modules/plutonium/media/icon/spell/phb-shocking-grasp.webp","scope":"global","command":"game.dnd5e.rollItemMacro(\"Shocking Grasp\");","folder":null,"sort":0,"permission":{"default":0,"DPSwXpPVU8d93GBw":3},"flags":{"dnd5e":{"itemMacro":true},"cf":{"id":"temp_kmxywdl31nl","path":"Players Folder#/CF_SEP/Paulo","color":"#000000"}}}
{"_id":"79SNkqjZKmiysTJX","name":"Misty Step","type":"script","author":"DPSwXpPVU8d93GBw","img":"modules/plutonium/media/icon/spell/phb-misty-step.webp","scope":"global","command":"game.dnd5e.rollItemMacro(\"Misty Step\");","folder":null,"sort":0,"permission":{"default":0,"DPSwXpPVU8d93GBw":3},"flags":{"dnd5e":{"itemMacro":true},"cf":{"id":"temp_kmxywdl31nl","path":"Players Folder#/CF_SEP/Paulo","color":"#000000"}}}
{"_id":"9UCXHdm3z1mGhB0P","name":"Fireball","type":"script","author":"DPSwXpPVU8d93GBw","img":"modules/plutonium/media/icon/spell/phb-fireball.webp","scope":"global","command":"game.dnd5e.rollItemMacro(\"Fireball\");","folder":null,"sort":0,"permission":{"default":0,"DPSwXpPVU8d93GBw":3},"flags":{"dnd5e":{"itemMacro":true},"cf":{"id":"temp_kmxywdl31nl","path":"Players Folder#/CF_SEP/Paulo","color":"#000000"}}}
{"_id":"EDMf40Zflc2rYyLM","name":"Melf's Minute Meteors Counter","type":"script","author":"DPSwXpPVU8d93GBw","img":"icons/magic/fire/projectile-fireball-embers-yellow.webp","scope":"global","command":"game.dnd5e.rollItemMacro(\"Melf's Minute Meteors Counter\");","folder":null,"sort":0,"permission":{"default":0,"DPSwXpPVU8d93GBw":3},"flags":{"dnd5e":{"itemMacro":true},"cf":{"id":"temp_kmxywdl31nl","path":"Players Folder#/CF_SEP/Paulo","color":"#000000"}}}
{"_id":"ERaL4N2z707Rne1z","name":"Hypnotic Pattern","type":"script","author":"DPSwXpPVU8d93GBw","img":"icons/magic/air/air-burst-spiral-pink.webp","scope":"global","command":"// Issues: initial render bug; overhead tile flickering; radial occlusion get filters\n// Dependencies: Advanced Macros, Midi QoL, Sequencer, Token Magic FX\nif ( !args.length ) game.dnd5e.rollItemMacro(\"Hypnotic Pattern\");\nelse if ( args[0].tag === \"OnUse\" ) {\n\tconst grid = canvas.grid.size;\n\tconst template = canvas.templates.get(args[0].templateId);\n\tconst templateCenter = {x: template.x + grid * 3, y: template.y + grid * 3};\n\tconst tileData = {\n\t\timg: \"upload-player/feanor/hypnotic-pattern.webp\",\n\t\tx: template.x,\n\t\ty: template.y,\n\t\twidth: grid * 6,\n\t\theight: grid * 6,\n\t\toverhead: true,\n\t\tocclusion: {alpha: 0.5, mode: 1}\n\t};\n\tconst params = [{\n\t\tfilterType: \"glow\",\n\t\tfilterId: \"hypnoticPatternGlow\",\n\t\tcolor: 0x0bccfc,\n\t\touterStrength: 2,\n\t\tanimated: {\n\t\t\tcolor: {\n\t\t\t\tloopDuration: 5000,\n\t\t\t\tanimType: \"colorOscillation\",\n\t\t\t\tval1: 0x0bccfc,\n\t\t\t\tval2: 0xff57f7\n\t\t\t}\n\t\t}\n\t},{\n\t\tfilterType: \"distortion\",\n\t\tfilterId: \"hypnoticPatternDistortion\",\n\t\tanimated: {\n\t\t\tmaskSpriteX: {\n\t\t\t\tspeed: 0.05,\n\t\t\t\tanimType: \"move\"\n\t\t\t},\n\t\t\tmaskSpriteY: {\n\t\t\t\tspeed: 0.07,\n\t\t\t\tanimType: \"move\"\n\t\t\t}\n\t\t}\n\t},{\n\t\tfilterType: \"shadow\",\n\t\tfilterId: \"hypnoticPatternShadow\",\n\t\trotation: 45,\n\t\tdistance: 70,\n\t\talpha: 0.7,\n\t\tcolor: 0x033D4B,\n\t\tanimated: {\n\t\t\tblur: {\n\t\t\t\tloopDuration: 2000,\n\t\t\t\tanimType: \"cosOscillation\",\n\t\t\t\tval1: 1,\n\t\t\t\tval2: 5\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tloopDuration: 4000,\n\t\t\t\tanimType: \"sinOscillation\",\n\t\t\t\tval1: 40,\n\t\t\t\tval2: 50\n\t\t\t},\n\t\t\tcolor: {\n\t\t\t\tloopDuration: 5000,\n\t\t\t\tanimType: \"colorOscillation\",\n\t\t\t\tval1: 0x033D4B,\n\t\t\t\tval2: 0x4C1A4A\n\t\t\t}\n\t\t}\n\t}];\n\tawait new Sequence()\n\t\t.wait(200)\n\t\t.thenDo(() => template.document.delete())\n\t\t.effect()\n\t\t\t.file(\"jb2a.magic_signs.circle.02.illusion.intro.purple\")\n\t\t\t.scale(.75)\n\t\t\t.belowTokens()\n\t\t\t.atLocation(templateCenter)\n\t\t.wait(2600)\n\t\t.play();\n\tconst tile = await canvas.scene.createEmbeddedDocuments(\"Tile\", [tileData]);\n\tawait new Promise(r => setTimeout(r, 50)); // Wait for initial render to avoid error (see https://gitlab.com/foundrynet/foundryvtt/-/issues/6434)\n\tTokenMagic.addFilters(tile[0].object, params);\n\tawait new Promise(r => setTimeout(r, 4000));\t// Teaser saving throw delay\n}","folder":null,"sort":0,"permission":{"default":0,"DPSwXpPVU8d93GBw":3},"flags":{"dnd5e":{"itemMacro":true},"combat-utility-belt":{"macroTrigger":""},"cf":{"id":"temp_kmxywdl31nl","path":"Players Folder#/CF_SEP/Paulo","color":"#000000"}}}
{"_id":"JitK8YCakH7Yt97Z","name":"Mage Hand","type":"script","author":"DPSwXpPVU8d93GBw","img":"modules/plutonium/media/icon/spell/phb-mage-hand.webp","scope":"global","command":"// Dependencies: Sequencer, Warp Gate\nif ( canvas.templates.preview.children.length ) return;\nconst spell = actor?.items.find(i => i.name === \"Mage Hand\");\nconst spellActor = game.actors.getName(\"Mage Hand\");\nif ( !spell || !spellActor ) return ui.notifications.warn(\"Spell not found.\");\n\nwarpgate.crosshairs.show({\n\ticon: spellActor.img,\n\tinterval: -1,\n\trememberControlled: true\n},{\n\tshow: checkDistance\n});\n\nasync function checkDistance(crosshairs) {\n\tconst range = spell.data.data.range.value;\n\tconst unit = canvas.scene.data.gridUnits;\n\tlet crosshairsDistance = 0, counter = 0;\n\tif ( token ) {\n\t\twhile ( crosshairs.inFlight && counter < 600 ) {\n\t\t\tcounter++;\n\t\t\tawait warpgate.wait(100);\t// Wait for initial render and delay loop\n\t\t\tconst ray = new Ray(token.center, crosshairs);\n\t\t\tconst distance = canvas.grid.measureDistances([{ray}], {gridSpaces: true});\n\t\t\tif ( distance !== crosshairsDistance ) {\n\t\t\t\tcrosshairsDistance = distance;\n\t\t\t\tcrosshairs.label = `${distance} ${unit}`;\n\t\t\t\tif ( distance > range ) crosshairs.icon = \"icons/svg/hazard.svg\";\n\t\t\t\telse crosshairs.icon = spellActor.img;\n\t\t\t\tcrosshairs.draw();\n\t\t\t}\n\t\t}\n\t} else {\n\t\twhile ( crosshairs.inFlight && counter < 600 ) {\n\t\t\tcounter++;\n\t\t\tawait warpgate.wait(100);\n\t\t}\n\t}\n\tif ( counter >= 600 ) crosshairs.inFlight = false;\n\tif ( crosshairs.cancelled ) return;\n\tif ( crosshairsDistance > range ) return ui.notifications.warn(\"Out of spell range.\");\n\tspell.roll();\n\tnew Sequence()\n\t\t.effect()\n\t\t\t.file(\"jb2a.swirling_sparkles.01.blue\")\n\t\t\t.atLocation(crosshairs)\n\t\t\t.scale(0.5)\n\t\t.wait(2400)\n\t\t.thenDo(() => warpgate.spawnAt(crosshairs, \"Mage Hand\"))\n\t\t.play();\n}","folder":null,"sort":0,"permission":{"default":0,"DPSwXpPVU8d93GBw":3},"flags":{"dnd5e":{"itemMacro":true},"combat-utility-belt":{"macroTrigger":""},"cf":{"id":"temp_kmxywdl31nl","path":"Players Folder#/CF_SEP/Paulo","color":"#000000"}}}
{"_id":"KPbk3tCRp3u9xoeW","name":"Potion of Healing","type":"script","author":"DPSwXpPVU8d93GBw","img":"icons/consumables/potions/potion-tube-corked-red.webp","scope":"global","command":"game.dnd5e.rollItemMacro(\"Potion of Healing\");","folder":null,"sort":0,"permission":{"default":0,"DPSwXpPVU8d93GBw":3},"flags":{"dnd5e":{"itemMacro":true},"cf":{"id":"temp_kmxywdl31nl","path":"Players Folder#/CF_SEP/Paulo","color":"#000000"}}}
{"_id":"MRwntP8m5wKRpDhr","name":"Flexible Casting","type":"script","author":"DPSwXpPVU8d93GBw","img":"icons/magic/lightning/bolt-strike-explosion-yellow.webp","scope":"global","command":"const feat = actor?.items.find(i => i.name === \"Flexible Casting\");\nconst resource = actor?.items.find(i => i.name === \"Sorcery Points\");\nif ( !feat || !resource ) return ui.notifications.warn(\"Feature not found.\");\n\nconst spellLevels = [{name:\"1st level\",level:\"1\",s:\"selected\"},{name:\"2nd level\",level:\"2\",s:\"\"},{name:\"3rd level\",level:\"3\",s:\"\"}];\nconst options = spellLevels.reduce((acc, cur) => acc += `<option value=\"${cur.level}\" ${cur.s}>${cur.name}</option>`,\"\");\nconst content = `<form><div class=\"form-group\"><label>Spell Slot Level:</label><select>${options}</select></div></form>`;\n\nnew Dialog({\n\ttitle: \"Flexible Casting: Usage Configuration\",\n\tcontent,\n\tbuttons: {\n\t\tExpend: {\n\t\t\ticon: `<i class=\"fas fa-chevron-down\"></i>`,\n\t\t\tlabel: \"Expend Slot\",\n\t\t\tcallback: async html => {\n\t\t\t\tconst spellLevel = html.find(\"select\").val();\n\t\t\t\tconst slotLevel = parseInt(spellLevel);\n\t\t\t\tconst slotsAvailable = actor.data.data.spells[`spell${spellLevel}`].value;\n\t\t\t\tif ( slotsAvailable < 1 ) return ui.notifications.warn(\"No spell slots available.\");\n\t\t\t\tif ( resource.data.data.uses.value >= resource.data.data.uses.max ) return ui.notifications.warn(\"Impossible to gain more sorcery points.\");\n\t\t\t\tactor.update({[`data.spells.spell${spellLevel}.value`]: slotsAvailable - 1});\n\t\t\t\tresource.update({\"data.uses.value\": Math.min(resource.data.data.uses.value + slotLevel, resource.data.data.uses.max)});\n\t\t\t\tawait feat.roll();\n\t\t\t\tChatMessage.create({\n\t\t\t\t\tcontent: `<div class=\"dice-roll\">\n\t\t\t\t\t\t\t\t<div class=\"dice-formula\">Spent a Slot Level ${spellLevel}</div>\n\t\t\t\t\t\t\t\t<div class=\"dice-formula\" style=\"margin:0\">Gained ${spellLevel} SP</div>\n\t\t\t\t\t\t\t</div>`,\n\t\t\t\t\tspeaker: {alias: \"FÃ«anor - Converting Spell Slot to SP\"}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tCreate: {\n\t\t\ticon: `<i class=\"fas fa-chevron-up\"></i>`,\n\t\t\tlabel: \"Create Slot\",\n\t\t\tcallback: async html => {\n\t\t\t\tconst spellLevel = html.find(\"select\").val();\n\t\t\t\tconst slotLevel = parseInt(spellLevel);\n\t\t\t\tconst cost = slotLevel < 3 ? slotLevel + 1 : slotLevel + 2;\n\t\t\t\tconst slotsAvailable = actor.data.data.spells[`spell${spellLevel}`].value;\n\t\t\t\tif ( resource.data.data.uses.value < cost ) return ui.notifications.warn(\"Not enough sorcery points.\");\n\t\t\t\tresource.update({\"data.uses.value\": resource.data.data.uses.value - cost});\n\t\t\t\tactor.update({[`data.spells.spell${spellLevel}.value`]: slotsAvailable + 1});\n\t\t\t\tawait feat.roll();\n\t\t\t\tChatMessage.create({\n\t\t\t\t\tcontent: `<div class=\"dice-roll\">\n\t\t\t\t\t\t\t\t<div class=\"dice-formula\">Spent ${cost} SP</div>\n\t\t\t\t\t\t\t\t<div class=\"dice-formula\" style=\"margin:0\">Created a Slot Level ${spellLevel}</div>\n\t\t\t\t\t\t\t</div>`,\n\t\t\t\t\tspeaker: {alias: \"FÃ«anor - Creating Spell Slot\"}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t},\n\trender: html => html.find(\"select\").focus(),\n\tdefault: \"Create\"\n}).render(true);","folder":null,"sort":0,"permission":{"default":0,"DPSwXpPVU8d93GBw":3},"flags":{"dnd5e":{"itemMacro":true},"combat-utility-belt":{"macroTrigger":""},"cf":{"id":"temp_kmxywdl31nl","path":"Players Folder#/CF_SEP/Paulo","color":"#000000"}}}
{"_id":"Pbw0ThZjW0bDMumQ","name":"Fire Bolt","type":"script","author":"DPSwXpPVU8d93GBw","img":"modules/plutonium/media/icon/spell/phb-fire-bolt.webp","scope":"global","command":"game.dnd5e.rollItemMacro(\"Fire Bolt\");","folder":null,"sort":0,"permission":{"default":0,"DPSwXpPVU8d93GBw":3},"flags":{"dnd5e":{"itemMacro":true},"cf":{"id":"temp_kmxywdl31nl","path":"Players Folder#/CF_SEP/Paulo","color":"#000000"}}}
{"_id":"RXmbzOb1gItsWRMw","name":"Metamagic: Twinned Spell","type":"script","author":"DPSwXpPVU8d93GBw","img":"icons/magic/light/beams-explosion-blue.webp","scope":"global","command":"const feat = actor?.items.find(i => i.name === \"Metamagic: Twinned Spell\");\nconst resource = actor?.items.find(i => i.name === \"Sorcery Points\");\nif ( !feat || !resource ) return ui.notifications.warn(\"Feature not found.\");\n\nconst spellLevels = [{name:\"Cantrip\",level:\"0\",s:\"selected\"},{name:\"1st level\",level:\"1\",s:\"\"},{name:\"2nd level\",level:\"2\",s:\"\"},{name:\"3rd level\",level:\"3\",s:\"\"}];\nconst options = spellLevels.reduce((acc, cur) => acc += `<option value=\"${cur.level}\" ${cur.s}>${cur.name}</option>`,\"\");\nconst content = `<form><div class=\"form-group\"><label>Spell Level:</label><select>${options}</select></div></form>`;\n\nconst d = Dialog.prompt({\n\ttitle: \"Twinned Spell: Usage Configuration\",\n\tcontent,\n\tlabel: \"Twin\",\n\tcallback: async html => {\n\t\tconst level = html.find(\"select\").val();\n\t\tconst cost = parseInt(level) || 1;\n\t\tif ( resource.data.data.uses.value < cost ) return ui.notifications.warn(\"Not enough Sorcery Points.\");\n\t\tresource.update({\"data.uses.value\": resource.data.data.uses.value - cost});\n\t\tawait feat.roll();\n\t\tChatMessage.create({\n\t\t\tcontent: `<div class=\"dice-roll\">\n\t\t\t\t\t\t<div class=\"dice-formula\">Spent ${cost} SP</div>\n\t\t\t\t\t\t<div class=\"dice-formula\" style=\"margin:0\">Duplicated a ${level === \"0\" ? \"Cantrip\" : \"Spell Level \" + level}</div>\n\t\t\t\t\t</div>`,\n\t\t\tspeaker: {alias: \"FÃ«anor - Twinned Spell\"}\n\t\t});\n\t},\n\trender: html => html.find(\"select\").focus(),\n\trejectClose: false\n});","folder":null,"sort":0,"permission":{"default":0,"DPSwXpPVU8d93GBw":3},"flags":{"dnd5e":{"itemMacro":true},"combat-utility-belt":{"macroTrigger":""},"cf":{"id":"temp_kmxywdl31nl","path":"Players Folder#/CF_SEP/Paulo","color":"#000000"}}}
{"_id":"Rb91AM5d89oBUl2a","name":"Metamagic: Empowered Spell","type":"script","author":"DPSwXpPVU8d93GBw","img":"icons/magic/lightning/bolt-strike-explosion-blue.webp","scope":"global","command":"const feat = actor?.items.find(i => i.name === \"Metamagic: Empowered Spell\");\nconst resource = actor?.items.find(i => i.name === \"Sorcery Points\");\nif ( !feat || !resource ) return ui.notifications.warn(\"Feature not found.\");\n\nconst diceSizes = [{size:\"4\",s:\"\"},{size:\"6\",s:\"selected\"},{size:\"8\",s:\"\"},{size:\"10\",s:\"\"},{size:\"12\",s:\"\"}];\nconst options = diceSizes.reduce((acc, cur) => acc += `<option value=\"${cur.size}\" ${cur.s}>d${cur.size}</option>`,\"\");\nconst content = `<form style=\"text-align:center\">\n\t\t\t\t\t<label>Dice Size:</label>\n\t\t\t\t\t<select>${options}</select>\n\t\t\t\t\t<div style=\"display:inline-block; width:5px\"></div>\n\t\t\t\t\t<label>Original Rolls:</label>\n\t\t\t\t\t<input name=\"roll1\" type=\"number\" style=\"width:40px\"/>\n\t\t\t\t\t<input name=\"roll2\" type=\"number\" style=\"width:40px\"/>\n\t\t\t\t\t<input name=\"roll3\" type=\"number\" style=\"width:40px\"/>\n\t\t\t\t\t<input name=\"roll4\" type=\"number\" style=\"width:40px\"/>\n\t\t\t\t</form>`;\n\nnew Dialog({\n\ttitle: \"Empowered Spell: Usage Configuration\",\n\tcontent,\n\tbuttons: {\n\t\tEmpower_0: {\n\t\t\ticon: `<i class=\"fas fa-minus\"></i>`,\n\t\t\tlabel: \"Empower: 0\",\n\t\t\tcallback: html => {\n\t\t\t\tconst diceSize = html.find(\"select\").val();\n\t\t\t\tconst rolls = html.find(\"input\").serializeArray();\n\t\t\t\tconst expend = false;\n\t\t\t\tempower(diceSize, rolls, expend);\n\t\t\t}\n\t\t},\n\t\tEmpower_1: {\n\t\t\ticon: `<i class=\"fas fa-dice-d20\"></i>`,\n\t\t\tlabel: \"Empower: 1\",\n\t\t\tcallback: html => {\n\t\t\t\tif ( resource.data.data.uses.value < 1 ) return ui.notifications.warn(\"Not enough Sorcery Points.\");\n\t\t\t\tconst diceSize = html.find(\"select\").val();\n\t\t\t\tconst rolls = html.find(\"input\").serializeArray();\n\t\t\t\tconst expend = true;\n\t\t\t\tempower(diceSize, rolls, expend);\n\t\t\t}\n\t\t}\n\t},\n\trender: html => html.find(\"select\").focus(),\n\tdefault: \"Empower_1\"\n}).render(true);\n\nasync function empower(diceSize, rolls, expend) {\n\tlet dicesRolled = 0, rollTotal = 0, rollString = \"\", error = false;\n\n\tfor ( let entry of rolls ) {\n\t\tconst roll = parseInt(entry.value);\n\t\tif ( roll || roll === 0 ) {\n\t\t\tif ( roll < 1 || roll > parseInt(diceSize) ) {\n\t\t\t\terror = true;\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tdicesRolled++;\n\t\t\t\trollTotal += roll;\n\t\t\t\tlet rollRank;\n\t\t\t\tif ( roll === 1 ) rollRank = \"min\";\n\t\t\t\tif ( roll == diceSize ) rollRank = \"max\";\n\t\t\t\trollString += `<span class=\"roll d${diceSize} ${rollRank}\" style=\"margin-bottom:5px\">${roll}</span>`;\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( !dicesRolled || error ) return ui.notifications.warn(\"Please insert valid roll numbers.\");\n\tif ( expend ) {\n\t\tresource.update({\"data.uses.value\": resource.data.data.uses.value - 1});\n\t\tawait feat.roll();\n\t}\n\tnew Roll(`${dicesRolled}d${diceSize} - ${rollTotal}`).toMessage({\n\t\t\tspeaker: {alias: \"FÃ«anor - Empowered Spell\"},\n\t\t\tflavor: `<div class=\"dice-roll\"><div class=\"dice-formula\" style=\"font-size:14px; color:#191813\">Spent ${expend ? 1 : 0} SP to Reroll:</div></div>\n\t\t\t\t\t<span class=\"dice-tooltip\"><span class=\"dice-rolls\">${rollString}</span></span>`\n\t\t});\n}","folder":null,"sort":0,"permission":{"default":0,"DPSwXpPVU8d93GBw":3},"flags":{"dnd5e":{"itemMacro":true},"combat-utility-belt":{"macroTrigger":""},"cf":{"id":"temp_kmxywdl31nl","path":"Players Folder#/CF_SEP/Paulo","color":"#000000"}}}
{"_id":"WuM2kOBww4o4eU3W","name":"Ray of Frost","type":"script","author":"DPSwXpPVU8d93GBw","img":"modules/plutonium/media/icon/spell/phb-ray-of-frost.webp","scope":"global","command":"game.dnd5e.rollItemMacro(\"Ray of Frost\");","folder":null,"sort":0,"permission":{"default":0,"DPSwXpPVU8d93GBw":3},"flags":{"dnd5e":{"itemMacro":true},"cf":{"id":"temp_kmxywdl31nl","path":"Players Folder#/CF_SEP/Paulo","color":"#000000"}}}
{"name":"#[CF_tempEntity]","type":"chat","author":"DPSwXpPVU8d93GBw","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"permission":{"default":0,"DPSwXpPVU8d93GBw":3},"flags":{"cf":{"id":"temp_roawjfzg1q","path":"Players Folder","color":"#000000","name":"Players Folder","children":[],"folderPath":[]}},"_id":"fYozNvQRedW3yQKh"}
{"name":"#[CF_tempEntity]","type":"chat","author":"DPSwXpPVU8d93GBw","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"permission":{"default":0,"DPSwXpPVU8d93GBw":3},"flags":{"cf":{"id":"temp_kmxywdl31nl","path":"Players Folder#/CF_SEP/Paulo","color":"#000000","name":"Paulo","children":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"folderPath":["temp_roawjfzg1q"]}},"_id":"iBCtikWsT6GtbPgU"}
{"_id":"iompENkOybhbSYZ8","name":"Minor Illusion","type":"script","author":"DPSwXpPVU8d93GBw","img":"modules/plutonium/media/icon/spell/phb-minor-illusion.webp","scope":"global","command":"// Dependencies: Advanced Macros, Midi QoL, Sequencer, Token Magic FX, Warp Gate\nif ( !args.length ) {\n\tif ( canvas.templates.preview.children.length ) return;\n\tconst spell = actor?.items.find(i => i.name === \"Minor Illusion\");\n\tif ( !spell ) return ui.notifications.warn(\"Spell not found.\");\n\n\tconst title = \"Minor Illusion: Image Selection\";\n\tconst illusions = [\n\t\t{name: \"Generic\", img: \"upload-player/feanor/minor-illusion/generic.webp\"},\n\t\t{name: \"Bush\", img: \"upload-player/feanor/minor-illusion/bush.webp\"},\n\t\t{name: \"Crate\", img: \"upload-player/feanor/minor-illusion/crate.webp\"},\n\t\t{name: \"Door\", img: \"upload-player/feanor/minor-illusion/door.webp\"},\n\t\t{name: \"Rock\", img: \"upload-player/feanor/minor-illusion/rock.webp\"},\n\t\t{name: \"Sack\", img: \"upload-player/feanor/minor-illusion/sack.webp\"},\n\t\t{name: \"Treasure Chest\", img: \"upload-player/feanor/minor-illusion/treasure-chest.webp\"},\n\t\t{name: \"Treasure Pile\", img: \"upload-player/feanor/minor-illusion/treasure-pile.webp\"}\n\t];\n\tconst content = `<form class=\"flexrow\" style=\"margin:0 0 5px 0\">\n\t\t\t\t\t\t<div style=\"display:inline-flex; justify-content:flex-end; align-items:center; padding-right:10px\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"overhead\">\n\t\t\t\t\t\t\t<label>Is Overhead?</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div style=\"display:inline-flex; justify-content:flex-start; align-items:center; padding-left:10px\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"filter\">\n\t\t\t\t\t\t\t<label>Has Filter?</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>`\n\n\tfunction buttonDialog() {\n\t\treturn new Promise(resolve => {\n\t\t\tconst buttons = {};\n\t\t\tillusions.forEach(illusion => {\n\t\t\t\tbuttons[illusion.name] = {\n\t\t\t\t\tlabel: `<img src=\"${illusion.img}\" style=\"border:0; max-height:70%\"><b>${illusion.name}</b>`,\n\t\t\t\t\tcallback: html => {\n\t\t\t\t\t\tconst isOverhead = html[0].querySelector(\"#overhead\").checked;\n\t\t\t\t\t\tconst hasFilter = html[0].querySelector(\"#filter\").checked;\n\t\t\t\t\t\tresolve({illusion: illusion.img, isOverhead, hasFilter});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tnew Dialog({title, content, buttons, default:\"Generic\",\n\t\t\t\trender: html => {\n\t\t\t\t\thtml.find(\"#overhead\").prop(\"checked\", spell.data.flags.world.castingChoices.isOverhead);\n\t\t\t\t\thtml.find(\"#filter\").prop(\"checked\", spell.data.flags.world.castingChoices.hasFilter);\n\t\t\t\t\thtml.find(\"input\").on(\"focus\", function(){$(this).css({\"box-shadow\": \"0 0 5px red\"})});\n\t\t\t\t\thtml.find(\"input\").on(\"focusout\", function(){$(this).css({\"box-shadow\": \"unset\"})});\n\t\t\t\t\thtml.find(\"button\").css({margin:0, \"max-width\":\"25%\", height:150, flex:\"0 0 auto\"});\n\t\t\t\t\thtml.find(\"#overhead\").focus();\n\t\t\t\t},\n\t\t\t\tclose: () => resolve(false)\n\t\t\t},{width:500}).render(true);\n\t\t});\n\t}\n\n\tlet selected = await buttonDialog();\n\tif ( !selected ) return;\n\twarpgate.crosshairs.show({\n\t\ticon: selected.illusion,\n\t\tinterval: -1,\n\t\trememberControlled: true\n\t},{\n\t\tshow: checkDistance\n\t});\n\n\tasync function checkDistance(crosshairs) {\n\t\tconst range = spell.data.data.range.value;\n\t\tconst unit = canvas.scene.data.gridUnits;\n\t\tlet crosshairsDistance = 0, counter = 0;\n\t\tif ( token ) {\n\t\t\twhile ( crosshairs.inFlight && counter < 600 ) {\n\t\t\t\tcounter++;\n\t\t\t\tawait warpgate.wait(100);\t// Wait for initial render and delay loop\n\t\t\t\tconst ray = new Ray(token.center, crosshairs);\n\t\t\t\tconst distance = canvas.grid.measureDistances([{ray}], {gridSpaces: true});\n\t\t\t\tif ( distance !== crosshairsDistance ) {\n\t\t\t\t\tcrosshairsDistance = distance;\n\t\t\t\t\tcrosshairs.label = `${distance} ${unit}`;\n\t\t\t\t\tif ( distance > range ) crosshairs.icon = \"icons/svg/hazard.svg\";\n\t\t\t\t\telse crosshairs.icon = selected.illusion;\n\t\t\t\t\tcrosshairs.draw();\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\twhile ( crosshairs.inFlight && counter < 600 ) {\n\t\t\t\tcounter++;\n\t\t\t\tawait warpgate.wait(100);\n\t\t\t}\n\t\t}\n\t\tif ( counter >= 600 ) crosshairs.inFlight = false;\n\t\tif ( crosshairs.cancelled ) return;\n\t\tif ( crosshairsDistance > range ) return ui.notifications.warn(\"Out of spell range.\");\n\t\tselected.location = crosshairs.center;\n\t\tawait spell.setFlag(\"world\", \"castingChoices\", selected);\n\t\tspell.roll();\n\t}\n} else if ( args[0].tag === \"OnUse\" ) {\n\tconst selected = args[0].item.flags.world.castingChoices;\n\tconst grid = canvas.grid.size;\n\tconst tileData = {\n\t\timg: selected.illusion,\n\t\tx: selected.location.x - grid / 2,\n\t\ty: selected.location.y - grid / 2,\n\t\twidth: grid,\n\t\theight: grid,\n\t\toverhead: true,\n\t\tocclusion: {mode: 0}\n\t};\n\tconst params = [{\n\t\tfilterType: \"adjustment\",\n\t\tfilterId: \"minorIllusionAdjustment\",\n\t\tanimated: {\n\t\t\talpha: {\n\t\t\t\tloopDuration: 5000,\n\t\t\t\tanimType: \"cosOscillation\",\n\t\t\t\tval1: 1,\n\t\t\t\tval2: 0.5\n\t\t\t}\n\t\t}\n\t}];\n\tawait new Sequence()\n\t\t.effect()\n\t\t\t.file(\"jb2a.magic_signs.circle.02.illusion.intro.purple\")\n\t\t\t.atLocation(selected.location)\n\t\t\t.belowTokens()\n\t\t\t.scale(0.2)\n\t\t.wait(2600)\n\t\t.play();\n\tconst tile = await canvas.scene.createEmbeddedDocuments(\"Tile\", [tileData]);\n\tawait warpgate.wait(1000);\n\tif ( !selected.isOverhead ) tile[0].update({overhead: false});\n\tif ( selected.hasFilter ) TokenMagic.addFilters(tile[0].object, params);\n}","folder":null,"sort":0,"permission":{"default":0,"DPSwXpPVU8d93GBw":3},"flags":{"dnd5e":{"itemMacro":true},"combat-utility-belt":{"macroTrigger":""},"cf":{"id":"temp_kmxywdl31nl","path":"Players Folder#/CF_SEP/Paulo","color":"#000000"}}}
{"_id":"j3v7fHi7TnyCxksG","name":"Melf's Minute Meteors","type":"script","author":"DPSwXpPVU8d93GBw","img":"icons/magic/earth/projectiles-lava-salvo-orange.webp","scope":"global","command":"// Dependencies: Advanced Macros, Midi QoL, Sequencer\nif ( !args.length ) game.dnd5e.rollItemMacro(\"Melf's Minute Meteors\");\nelse if ( args[0].tag === \"OnUse\" ) {\n\tawait new Sequence()\n\t\t.sound()\n\t\t\t.file(\"upload-player/feanor/melfs-minute-meteors_casting.wav\")\n\t\t.wait(4000)\n\t\t.play();\n\tconst level = args[0].spellLevel;\n\tconst quantity = 6 + (2 * (level - 3));\n\tChatMessage.create({\n\t\tcontent: `<div class=\"dice-roll\"><div class=\"dice-formula\" style=\"margin:0\">Created ${quantity} meteors</div></div>`,\n\t\tspeaker: {alias: \"FÃ«anor - Melf's Minute Meteors\"}\n\t});\n\tconst counter = actor.items.find(i => i.name === \"Melf's Minute Meteors Counter\");\n\tif ( !counter ) return ui.notifications.warn(\"Melf's Minute Meteors Counter not found.\");\n\tcounter.update({\"data.uses.value\": quantity, \"data.uses.max\": quantity});\n}","folder":null,"sort":0,"permission":{"default":0,"DPSwXpPVU8d93GBw":3},"flags":{"dnd5e":{"itemMacro":true},"combat-utility-belt":{"macroTrigger":""},"cf":{"id":"temp_kmxywdl31nl","path":"Players Folder#/CF_SEP/Paulo","color":"#000000"}}}
{"_id":"k0Biy0YZeSQVsmzB","name":"Elemental Affinity: Fire Resistance","type":"script","author":"DPSwXpPVU8d93GBw","img":"icons/equipment/shield/heater-stone-orange.webp","scope":"global","command":"const feat = actor?.items.find(i => i.name === \"Elemental Affinity\");\nconst effect = actor?.effects.find(e => e.data.label === \"Fire Resistance\");\nconst resource = actor?.items.find(i => i.name === \"Sorcery Points\");\nif ( !feat || !effect || !resource ) return ui.notifications.warn(\"Feature not found.\");\nif ( effect.data.disabled ) {\n\tif ( resource.data.data.uses.value < 1 ) return ui.notifications.warn(\"Not enough sorcery points.\");\n\teffect.update({disabled: false});\n\tresource.update({\"data.uses.value\": resource.data.data.uses.value - 1});\n\tawait feat.roll();\n\tChatMessage.create({\n\t\tcontent: `<div class=\"dice-roll\">\n\t\t\t\t\t<div class=\"dice-formula\">Spent 1 SP</div>\n\t\t\t\t\t<div class=\"dice-formula\" style=\"margin:0\">Gained Fire Resistance (1 hour)</div>\n\t\t\t\t</div>`,\n\t\tspeaker: {alias: \"FÃ«anor - Elemental Affinity\"}\n\t});\n} else {\n\teffect.update({disabled: true});\n\tChatMessage.create({\n\t\tcontent: `<div class=\"dice-roll\"><div class=\"dice-formula\" style=\"margin:0\">Lost Fire Resistance</div></div>`,\n\t\tspeaker: {alias: \"FÃ«anor - Elemental Affinity\"}\n\t});\n}","folder":null,"sort":0,"permission":{"default":0,"DPSwXpPVU8d93GBw":3},"flags":{"dnd5e":{"itemMacro":true},"combat-utility-belt":{"macroTrigger":""},"cf":{"id":"temp_kmxywdl31nl","path":"Players Folder#/CF_SEP/Paulo","color":"#000000"}}}
{"_id":"mz7bIVWb9auoJEbt","name":"Aganazzar's Scorcher","type":"script","author":"DPSwXpPVU8d93GBw","img":"icons/magic/fire/beam-jet-stream-trails-orange.webp","scope":"global","command":"game.dnd5e.rollItemMacro(\"Aganazzar's Scorcher\");","folder":null,"sort":0,"permission":{"default":0,"DPSwXpPVU8d93GBw":3},"flags":{"dnd5e":{"itemMacro":true},"cf":{"id":"temp_kmxywdl31nl","path":"Players Folder#/CF_SEP/Paulo","color":"#000000"}}}
{"_id":"pv89xQ26HodUOlKZ","name":"Elemental Affinity: Fire Damage Bonus","type":"script","author":"DPSwXpPVU8d93GBw","img":"icons/magic/fire/flame-burning-fist-strike.webp","scope":"global","command":"const effect = actor?.effects.find(e => e.data.label === \"Fire Damage Bonus\");\nif ( !effect ) return ui.notifications.warn(\"Feature not found.\");\neffect.update({disabled: !effect.data.disabled});","folder":null,"sort":0,"permission":{"default":0,"DPSwXpPVU8d93GBw":3},"flags":{"dnd5e":{"itemMacro":true},"combat-utility-belt":{"macroTrigger":""},"cf":{"id":"temp_kmxywdl31nl","path":"Players Folder#/CF_SEP/Paulo","color":"#000000"}}}
{"_id":"wL6QZ29r2k96wwKC","name":"Chromatic Orb","type":"script","author":"DPSwXpPVU8d93GBw","img":"icons/magic/symbols/elements-air-earth-fire-water.webp","scope":"global","command":"const spell = actor?.items.find(i => i.name === \"Chromatic Orb\");\nif ( !spell ) return ui.notifications.warn(\"Spell not found.\");\n\nlet damageTypes = [{name:\"Acid\",type:\"acid\"},{name:\"Cold\",type:\"cold\"},{name:\"Fire\",type:\"fire\"},{name:\"Lightning\",type:\"lightning\"},{name:\"Poison\",type:\"poison\"},{name:\"Thunder\",type:\"thunder\"}];\n\nconst currentDamageType = spell.data.data.damage.parts[0][1];\nconst index = damageTypes.findIndex(entry => entry.type === currentDamageType);\ndamageTypes[index].s = \"selected\";\n\nconst options = damageTypes.reduce((acc, cur) => acc += `<option value=\"${cur.type}\" ${cur.s}>${cur.name}</option>`,\"\");\nconst content = `<form><div class=\"form-group\"><label>Damage Type:</label><select>${options}</select></div></form>`;\n\nconst d = Dialog.prompt({\n\ttitle: \"Chromatic Orb: Usage Configuration\",\n\tcontent,\n\tlabel: \"Ok\",\n\tcallback: html => {\n\t\tconst selectedDamageType = html[0].querySelector(\"select\").value;\n\t\tlet newDamage = duplicate(spell.data.data.damage);\n\t\tnewDamage.parts[0][1] = selectedDamageType;\n\t\tspell.update({\"data.damage\": newDamage});\n\t\tspell.roll();\n\t},\n\trender: html => html.find(\"select\").focus(),\n\trejectClose: false\n});","folder":null,"sort":0,"permission":{"default":0,"DPSwXpPVU8d93GBw":3},"flags":{"dnd5e":{"itemMacro":true},"combat-utility-belt":{"macroTrigger":""},"cf":{"id":"temp_kmxywdl31nl","path":"Players Folder#/CF_SEP/Paulo","color":"#000000"}}}
{"_id":"ziBzq6I5ARxC4YKX","name":"Shield","type":"script","author":"DPSwXpPVU8d93GBw","img":"modules/plutonium/media/icon/spell/phb-shield.webp","scope":"global","command":"game.dnd5e.rollItemMacro(\"Shield\");","folder":null,"sort":0,"permission":{"default":0,"DPSwXpPVU8d93GBw":3},"flags":{"dnd5e":{"itemMacro":true},"cf":{"id":"temp_kmxywdl31nl","path":"Players Folder#/CF_SEP/Paulo","color":"#000000"}}}
